{"version":3,"names":["cov_26tdx28qvp","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","_coverageSchema","coverage","actualCoverage","fs","require","promises","Phase2Validator","constructor","validationResults","errors","warnings","validatePhase2","console","log","repeat","validateFileStructure","validateImplementation","validateIntegration","generateReport","error","push","message","requiredStructure","filePath","description","Object","entries","access","status","details","implementations","file","requiredMethods","requiredClasses","requiredInterfaces","impl","validateImplementationFile","content","readFile","className","includes","method","interfaceName","integrationChecks","check","files","Error","commandFile","requiredCommands","command","testFile","requiredTestSuites","suite","passed","filter","r","length","failed","total","Math","round","forEach","warning","isComplete","completionPercentage","complete","percentage","main","module","validator","catch","exports"],"sources":["validate-phase-2.js"],"sourcesContent":["#!/usr/bin/env node\n\n/**\n * Phase 2 Validation Script\n * Validates Phase 2: Retrofit Context Enhancement implementation\n */\n\nconst fs = require('fs').promises;\nconst path = require('path');\n\nclass Phase2Validator {\n    constructor() {\n        this.validationResults = [];\n        this.errors = [];\n        this.warnings = [];\n    }\n\n    async validatePhase2() {\n        console.log('🔍 Validating Phase 2: Retrofit Context Enhancement');\n        console.log('═'.repeat(60));\n\n        try {\n            // Validate file structure\n            await this.validateFileStructure();\n            \n            // Validate implementation completeness\n            await this.validateImplementation();\n            \n            // Validate integration points\n            await this.validateIntegration();\n            \n            // Generate validation report\n            this.generateReport();\n            \n        } catch (error) {\n            this.errors.push(`Validation failed: ${error.message}`);\n            this.generateReport();\n        }\n    }\n\n    async validateFileStructure() {\n        console.log('\\n📁 Validating File Structure...');\n        \n        const requiredStructure = {\n            'retrofit/patterns/detector.ts': 'Pattern Detection Engine',\n            'retrofit/patterns/types.ts': 'Pattern Type Definitions', \n            'retrofit/parsers/types.ts': 'Parser Interface Definitions',\n            'retrofit/parsers/javascript.ts': 'JavaScript/TypeScript Parser',\n            'retrofit/context-layers.ts': 'Four-tier Context System',\n            'retrofit/analyzer/enhanced-analyzer.ts': 'Enhanced Codebase Analyzer',\n            'retrofit/agents/adaptive-generator.ts': 'Adaptive Agent Generation',\n            'retrofit/compatibility/assurance-system.ts': 'Compatibility Assurance',\n            'retrofit/commands/enhanced-commands.ts': 'Enhanced Command Suite',\n            'retrofit/incremental/incremental-system.ts': 'Incremental Retrofit System',\n            'retrofit/testing/comprehensive-tests.ts': 'Comprehensive Test Suite'\n        };\n\n        for (const [filePath, description] of Object.entries(requiredStructure)) {\n            try {\n                await fs.access(filePath);\n                this.validationResults.push({\n                    type: 'file',\n                    name: description,\n                    status: 'pass',\n                    details: `✅ ${filePath} exists`\n                });\n                console.log(`  ✅ ${description}`);\n            } catch (error) {\n                this.errors.push(`Missing file: ${filePath} (${description})`);\n                this.validationResults.push({\n                    type: 'file',\n                    name: description,\n                    status: 'fail',\n                    details: `❌ ${filePath} missing`\n                });\n                console.log(`  ❌ ${description} - File missing`);\n            }\n        }\n    }\n\n    async validateImplementation() {\n        console.log('\\n🔍 Validating Implementation Completeness...');\n        \n        const implementations = [\n            {\n                name: 'Pattern Recognition Engine',\n                file: 'retrofit/patterns/detector.ts',\n                requiredMethods: ['detectPatterns', 'learnPatterns'],\n                requiredClasses: ['PatternDetector']\n            },\n            {\n                name: 'Context Layers System', \n                file: 'retrofit/context-layers.ts',\n                requiredInterfaces: ['RetrofitContext', 'DiscoveryContext', 'PreservationContext', 'ImprovementContext', 'EvolutionContext'],\n                requiredClasses: ['RetrofitContextBuilder']\n            },\n            {\n                name: 'Enhanced Analyzer',\n                file: 'retrofit/analyzer/enhanced-analyzer.ts',\n                requiredMethods: ['analyzePatterns', 'extractConventions', 'detectAntiPatterns', 'quantifyTechnicalDebt', 'generateContextProfile'],\n                requiredClasses: ['EnhancedCodebaseAnalyzer']\n            },\n            {\n                name: 'Adaptive Agent Generator',\n                file: 'retrofit/agents/adaptive-generator.ts',\n                requiredMethods: ['generateFromPatterns', 'customizeForProject', 'validateConsistency', 'evolveWithFeedback'],\n                requiredClasses: ['AdaptiveAgentGenerator']\n            },\n            {\n                name: 'Compatibility System',\n                file: 'retrofit/compatibility/assurance-system.ts',\n                requiredMethods: ['checkVersions', 'validateDependencies', 'verifyAPIContracts', 'preventRegressions', 'generateMigrationPath'],\n                requiredClasses: ['CompatibilityAssuranceSystem']\n            }\n        ];\n\n        for (const impl of implementations) {\n            await this.validateImplementationFile(impl);\n        }\n    }\n\n    async validateImplementationFile(impl) {\n        try {\n            const content = await fs.readFile(impl.file, 'utf8');\n            \n            // Check for required classes\n            if (impl.requiredClasses) {\n                for (const className of impl.requiredClasses) {\n                    if (content.includes(`class ${className}`)) {\n                        console.log(`  ✅ ${impl.name}: ${className} class implemented`);\n                    } else {\n                        this.errors.push(`${impl.name}: Missing class ${className}`);\n                        console.log(`  ❌ ${impl.name}: Missing class ${className}`);\n                    }\n                }\n            }\n\n            // Check for required methods\n            if (impl.requiredMethods) {\n                for (const method of impl.requiredMethods) {\n                    if (content.includes(`${method}(`)) {\n                        console.log(`  ✅ ${impl.name}: ${method} method implemented`);\n                    } else {\n                        this.warnings.push(`${impl.name}: Method ${method} might be missing or incomplete`);\n                        console.log(`  ⚠️ ${impl.name}: Method ${method} might be missing`);\n                    }\n                }\n            }\n\n            // Check for required interfaces\n            if (impl.requiredInterfaces) {\n                for (const interfaceName of impl.requiredInterfaces) {\n                    if (content.includes(`interface ${interfaceName}`)) {\n                        console.log(`  ✅ ${impl.name}: ${interfaceName} interface defined`);\n                    } else {\n                        this.errors.push(`${impl.name}: Missing interface ${interfaceName}`);\n                        console.log(`  ❌ ${impl.name}: Missing interface ${interfaceName}`);\n                    }\n                }\n            }\n\n            this.validationResults.push({\n                type: 'implementation',\n                name: impl.name,\n                status: 'pass',\n                details: 'Implementation validated'\n            });\n\n        } catch (error) {\n            this.errors.push(`Failed to validate ${impl.name}: ${error.message}`);\n            this.validationResults.push({\n                type: 'implementation',\n                name: impl.name,\n                status: 'fail',\n                details: error.message\n            });\n        }\n    }\n\n    async validateIntegration() {\n        console.log('\\n🔗 Validating Integration Points...');\n        \n        const integrationChecks = [\n            {\n                name: 'TypeScript Definitions',\n                check: async () => {\n                    // Check for proper TypeScript interfaces and exports\n                    const files = [\n                        'retrofit/patterns/types.ts',\n                        'retrofit/parsers/types.ts'\n                    ];\n                    \n                    for (const file of files) {\n                        const content = await fs.readFile(file, 'utf8');\n                        if (!content.includes('export interface') && !content.includes('export enum')) {\n                            throw new Error(`${file} missing proper exports`);\n                        }\n                    }\n                    return true;\n                }\n            },\n            {\n                name: 'Command Integration',\n                check: async () => {\n                    const commandFile = 'retrofit/commands/enhanced-commands.ts';\n                    const content = await fs.readFile(commandFile, 'utf8');\n                    \n                    const requiredCommands = [\n                        'vibeRetrofitExisting',\n                        'vibeAnalyzeCodebase', \n                        'vibeRetrofitContext'\n                    ];\n                    \n                    for (const command of requiredCommands) {\n                        if (!content.includes(command)) {\n                            throw new Error(`Missing command: ${command}`);\n                        }\n                    }\n                    return true;\n                }\n            },\n            {\n                name: 'Test Coverage',\n                check: async () => {\n                    const testFile = 'retrofit/testing/comprehensive-tests.ts';\n                    const content = await fs.readFile(testFile, 'utf8');\n                    \n                    const requiredTestSuites = [\n                        'Pattern Detection Accuracy',\n                        'Convention Detection Validation',\n                        'Agent Generation Quality',\n                        'Compatibility Assurance',\n                        'Performance Benchmarks'\n                    ];\n                    \n                    for (const suite of requiredTestSuites) {\n                        if (!content.includes(suite)) {\n                            throw new Error(`Missing test suite: ${suite}`);\n                        }\n                    }\n                    return true;\n                }\n            }\n        ];\n\n        for (const check of integrationChecks) {\n            try {\n                await check.check();\n                console.log(`  ✅ ${check.name}`);\n                this.validationResults.push({\n                    type: 'integration',\n                    name: check.name,\n                    status: 'pass',\n                    details: 'Integration point validated'\n                });\n            } catch (error) {\n                console.log(`  ❌ ${check.name}: ${error.message}`);\n                this.errors.push(`Integration check failed - ${check.name}: ${error.message}`);\n                this.validationResults.push({\n                    type: 'integration',\n                    name: check.name,\n                    status: 'fail',\n                    details: error.message\n                });\n            }\n        }\n    }\n\n    generateReport() {\n        console.log('\\n📊 Validation Report');\n        console.log('═'.repeat(60));\n\n        const passed = this.validationResults.filter(r => r.status === 'pass').length;\n        const failed = this.validationResults.filter(r => r.status === 'fail').length;\n        const total = this.validationResults.length;\n\n        console.log(`\\n✅ Passed: ${passed}`);\n        console.log(`❌ Failed: ${failed}`);\n        console.log(`⚠️ Warnings: ${this.warnings.length}`);\n        console.log(`📊 Success Rate: ${Math.round((passed / total) * 100)}%`);\n\n        if (this.errors.length > 0) {\n            console.log('\\n❌ Critical Issues:');\n            this.errors.forEach(error => console.log(`  • ${error}`));\n        }\n\n        if (this.warnings.length > 0) {\n            console.log('\\n⚠️ Warnings:');\n            this.warnings.forEach(warning => console.log(`  • ${warning}`));\n        }\n\n        // Phase 2 completion assessment\n        const isComplete = this.errors.length === 0;\n        const completionPercentage = Math.round((passed / total) * 100);\n\n        console.log('\\n🎯 Phase 2 Completion Assessment');\n        console.log('─'.repeat(40));\n        \n        if (isComplete && completionPercentage >= 95) {\n            console.log('🟢 Phase 2: COMPLETE ✅');\n            console.log('   All core requirements implemented');\n            console.log('   Ready for integration and testing');\n        } else if (completionPercentage >= 80) {\n            console.log('🟡 Phase 2: MOSTLY COMPLETE ⚠️');\n            console.log('   Core functionality implemented');\n            console.log('   Minor issues to address');\n        } else {\n            console.log('🔴 Phase 2: INCOMPLETE ❌');\n            console.log('   Major implementation gaps');\n            console.log('   Requires significant work');\n        }\n\n        console.log(`\\n📈 Implementation Progress: ${completionPercentage}%`);\n        \n        if (this.warnings.length === 0 && this.errors.length === 0) {\n            console.log('\\n🚀 Ready for Phase 3: Advanced Context Features');\n        }\n\n        return {\n            complete: isComplete,\n            percentage: completionPercentage,\n            passed,\n            failed,\n            warnings: this.warnings.length,\n            errors: this.errors.length\n        };\n    }\n}\n\n// Run validation if called directly\nif (require.main === module) {\n    const validator = new Phase2Validator();\n    validator.validatePhase2().catch(console.error);\n}\n\nmodule.exports = Phase2Validator;"],"mappings":"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","ignoreList":[]}