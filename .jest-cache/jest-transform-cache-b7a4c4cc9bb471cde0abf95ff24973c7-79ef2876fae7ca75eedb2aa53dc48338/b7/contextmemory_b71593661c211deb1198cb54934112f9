4b70f43b27112b9fcf34846de4be36ba
"use strict";

/**
 * Context Memory Storage with Learning Capabilities
 * Stores and learns from context patterns, decisions, and usage
 */
/* istanbul ignore next */
function cov_18qgtka0l9() {
  var path = "/Users/dallionking/Vibe Projects/Vibe Workflow commands /context/memory/context-memory.ts";
  var hash = "1282b247564db37b2b688e126d287ac38b92a0ba";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dallionking/Vibe Projects/Vibe Workflow commands /context/memory/context-memory.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 62
        }
      },
      "1": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 104
        }
      },
      "2": {
        start: {
          line: 8,
          column: 24
        },
        end: {
          line: 8,
          column: 57
        }
      },
      "3": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 34
        }
      },
      "4": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 38
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 23,
          column: 10
        }
      },
      "6": {
        start: {
          line: 29,
          column: 28
        },
        end: {
          line: 35,
          column: 9
        }
      },
      "7": {
        start: {
          line: 37,
          column: 33
        },
        end: {
          line: 37,
          column: 73
        }
      },
      "8": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 65
        }
      },
      "9": {
        start: {
          line: 40,
          column: 33
        },
        end: {
          line: 40,
          column: 73
        }
      },
      "10": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 65
        }
      },
      "11": {
        start: {
          line: 43,
          column: 32
        },
        end: {
          line: 43,
          column: 71
        }
      },
      "12": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 64
        }
      },
      "13": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 95
        }
      },
      "14": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 99
        }
      },
      "15": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 27
        }
      },
      "16": {
        start: {
          line: 55,
          column: 26
        },
        end: {
          line: 55,
          column: 67
        }
      },
      "17": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 67,
          column: 9
        }
      },
      "18": {
        start: {
          line: 58,
          column: 31
        },
        end: {
          line: 58,
          column: 64
        }
      },
      "19": {
        start: {
          line: 59,
          column: 33
        },
        end: {
          line: 59,
          column: 71
        }
      },
      "20": {
        start: {
          line: 61,
          column: 25
        },
        end: {
          line: 61,
          column: 26
        }
      },
      "21": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 63,
          column: 29
        }
      },
      "22": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 63,
          column: 29
        }
      },
      "23": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 65,
          column: 29
        }
      },
      "24": {
        start: {
          line: 65,
          column: 16
        },
        end: {
          line: 65,
          column: 29
        }
      },
      "25": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 69
        }
      },
      "26": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 65
        }
      },
      "27": {
        start: {
          line: 75,
          column: 32
        },
        end: {
          line: 75,
          column: 34
        }
      },
      "28": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "29": {
        start: {
          line: 77,
          column: 31
        },
        end: {
          line: 77,
          column: 100
        }
      },
      "30": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 83,
          column: 13
        }
      },
      "31": {
        start: {
          line: 79,
          column: 16
        },
        end: {
          line: 82,
          column: 19
        }
      },
      "32": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 75
        }
      },
      "33": {
        start: {
          line: 85,
          column: 46
        },
        end: {
          line: 85,
          column: 73
        }
      },
      "34": {
        start: {
          line: 89,
          column: 25
        },
        end: {
          line: 89,
          column: 27
        }
      },
      "35": {
        start: {
          line: 91,
          column: 29
        },
        end: {
          line: 91,
          column: 55
        }
      },
      "36": {
        start: {
          line: 91,
          column: 48
        },
        end: {
          line: 91,
          column: 54
        }
      },
      "37": {
        start: {
          line: 92,
          column: 28
        },
        end: {
          line: 92,
          column: 52
        }
      },
      "38": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 106,
          column: 9
        }
      },
      "39": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 105,
          column: 15
        }
      },
      "40": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 24
        }
      },
      "41": {
        start: {
          line: 110,
          column: 25
        },
        end: {
          line: 110,
          column: 27
        }
      },
      "42": {
        start: {
          line: 112,
          column: 29
        },
        end: {
          line: 112,
          column: 38
        }
      },
      "43": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 115,
          column: 11
        }
      },
      "44": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 82
        }
      },
      "45": {
        start: {
          line: 116,
          column: 24
        },
        end: {
          line: 119,
          column: 22
        }
      },
      "46": {
        start: {
          line: 117,
          column: 32
        },
        end: {
          line: 117,
          column: 37
        }
      },
      "47": {
        start: {
          line: 118,
          column: 40
        },
        end: {
          line: 118,
          column: 62
        }
      },
      "48": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 133,
          column: 9
        }
      },
      "49": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 132,
          column: 15
        }
      },
      "50": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 24
        }
      },
      "51": {
        start: {
          line: 137,
          column: 25
        },
        end: {
          line: 137,
          column: 27
        }
      },
      "52": {
        start: {
          line: 139,
          column: 32
        },
        end: {
          line: 139,
          column: 41
        }
      },
      "53": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 146,
          column: 11
        }
      },
      "54": {
        start: {
          line: 141,
          column: 26
        },
        end: {
          line: 144,
          column: 29
        }
      },
      "55": {
        start: {
          line: 143,
          column: 29
        },
        end: {
          line: 143,
          column: 41
        }
      },
      "56": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 61
        }
      },
      "57": {
        start: {
          line: 145,
          column: 34
        },
        end: {
          line: 145,
          column: 59
        }
      },
      "58": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 164,
          column: 9
        }
      },
      "59": {
        start: {
          line: 148,
          column: 33
        },
        end: {
          line: 148,
          column: 67
        }
      },
      "60": {
        start: {
          line: 149,
          column: 31
        },
        end: {
          line: 149,
          column: 65
        }
      },
      "61": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 163,
          column: 13
        }
      },
      "62": {
        start: {
          line: 151,
          column: 16
        },
        end: {
          line: 162,
          column: 19
        }
      },
      "63": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 165,
          column: 24
        }
      },
      "64": {
        start: {
          line: 168,
          column: 22
        },
        end: {
          line: 168,
          column: 55
        }
      },
      "65": {
        start: {
          line: 168,
          column: 41
        },
        end: {
          line: 168,
          column: 47
        }
      },
      "66": {
        start: {
          line: 169,
          column: 27
        },
        end: {
          line: 169,
          column: 64
        }
      },
      "67": {
        start: {
          line: 169,
          column: 46
        },
        end: {
          line: 169,
          column: 56
        }
      },
      "68": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 170,
          column: 60
        }
      },
      "69": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 173,
          column: 55
        }
      },
      "70": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 178,
          column: 23
        }
      },
      "71": {
        start: {
          line: 177,
          column: 22
        },
        end: {
          line: 177,
          column: 66
        }
      },
      "72": {
        start: {
          line: 181,
          column: 23
        },
        end: {
          line: 181,
          column: 50
        }
      },
      "73": {
        start: {
          line: 181,
          column: 43
        },
        end: {
          line: 181,
          column: 49
        }
      },
      "74": {
        start: {
          line: 182,
          column: 23
        },
        end: {
          line: 182,
          column: 64
        }
      },
      "75": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 184,
          column: 21
        }
      },
      "76": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 21
        }
      },
      "77": {
        start: {
          line: 185,
          column: 29
        },
        end: {
          line: 185,
          column: 67
        }
      },
      "78": {
        start: {
          line: 185,
          column: 48
        },
        end: {
          line: 185,
          column: 66
        }
      },
      "79": {
        start: {
          line: 186,
          column: 22
        },
        end: {
          line: 186,
          column: 58
        }
      },
      "80": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 187,
          column: 50
        }
      },
      "81": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 191,
          column: 21
        }
      },
      "82": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 191,
          column: 21
        }
      },
      "83": {
        start: {
          line: 192,
          column: 30
        },
        end: {
          line: 192,
          column: 98
        }
      },
      "84": {
        start: {
          line: 192,
          column: 58
        },
        end: {
          line: 192,
          column: 76
        }
      },
      "85": {
        start: {
          line: 193,
          column: 28
        },
        end: {
          line: 193,
          column: 60
        }
      },
      "86": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 194,
          column: 43
        }
      },
      "87": {
        start: {
          line: 197,
          column: 32
        },
        end: {
          line: 197,
          column: 34
        }
      },
      "88": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 210,
          column: 11
        }
      },
      "89": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 209,
          column: 13
        }
      },
      "90": {
        start: {
          line: 201,
          column: 20
        },
        end: {
          line: 201,
          column: 103
        }
      },
      "91": {
        start: {
          line: 202,
          column: 20
        },
        end: {
          line: 202,
          column: 26
        }
      },
      "92": {
        start: {
          line: 204,
          column: 20
        },
        end: {
          line: 204,
          column: 104
        }
      },
      "93": {
        start: {
          line: 205,
          column: 20
        },
        end: {
          line: 205,
          column: 26
        }
      },
      "94": {
        start: {
          line: 207,
          column: 20
        },
        end: {
          line: 207,
          column: 101
        }
      },
      "95": {
        start: {
          line: 208,
          column: 20
        },
        end: {
          line: 208,
          column: 26
        }
      },
      "96": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 211,
          column: 31
        }
      },
      "97": {
        start: {
          line: 214,
          column: 25
        },
        end: {
          line: 214,
          column: 53
        }
      },
      "98": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 234,
          column: 9
        }
      },
      "99": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 29
        }
      },
      "100": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 217,
          column: 43
        }
      },
      "101": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 218,
          column: 73
        }
      },
      "102": {
        start: {
          line: 221,
          column: 31
        },
        end: {
          line: 232,
          column: 13
        }
      },
      "103": {
        start: {
          line: 226,
          column: 54
        },
        end: {
          line: 226,
          column: 60
        }
      },
      "104": {
        start: {
          line: 233,
          column: 12
        },
        end: {
          line: 233,
          column: 53
        }
      },
      "105": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 238,
          column: 9
        }
      },
      "106": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 237,
          column: 38
        }
      },
      "107": {
        start: {
          line: 241,
          column: 31
        },
        end: {
          line: 242,
          column: 60
        }
      },
      "108": {
        start: {
          line: 242,
          column: 36
        },
        end: {
          line: 242,
          column: 59
        }
      },
      "109": {
        start: {
          line: 243,
          column: 25
        },
        end: {
          line: 243,
          column: 91
        }
      },
      "110": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 244,
          column: 63
        }
      },
      "111": {
        start: {
          line: 244,
          column: 36
        },
        end: {
          line: 244,
          column: 61
        }
      },
      "112": {
        start: {
          line: 247,
          column: 0
        },
        end: {
          line: 247,
          column: 60
        }
      },
      "113": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 261,
          column: 10
        }
      },
      "114": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 262,
          column: 71
        }
      },
      "115": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 263,
          column: 41
        }
      },
      "116": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 264,
          column: 37
        }
      },
      "117": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 271,
          column: 10
        }
      },
      "118": {
        start: {
          line: 277,
          column: 32
        },
        end: {
          line: 286,
          column: 9
        }
      },
      "119": {
        start: {
          line: 287,
          column: 8
        },
        end: {
          line: 287,
          column: 70
        }
      },
      "120": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 288,
          column: 49
        }
      },
      "121": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 290,
          column: 164
        }
      },
      "122": {
        start: {
          line: 296,
          column: 32
        },
        end: {
          line: 296,
          column: 80
        }
      },
      "123": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 297,
          column: 56
        }
      },
      "124": {
        start: {
          line: 298,
          column: 8
        },
        end: {
          line: 298,
          column: 31
        }
      },
      "125": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 304,
          column: 62
        }
      },
      "126": {
        start: {
          line: 310,
          column: 28
        },
        end: {
          line: 319,
          column: 9
        }
      },
      "127": {
        start: {
          line: 320,
          column: 8
        },
        end: {
          line: 320,
          column: 47
        }
      },
      "128": {
        start: {
          line: 326,
          column: 22
        },
        end: {
          line: 326,
          column: 47
        }
      },
      "129": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 330,
          column: 9
        }
      },
      "130": {
        start: {
          line: 328,
          column: 12
        },
        end: {
          line: 328,
          column: 32
        }
      },
      "131": {
        start: {
          line: 329,
          column: 12
        },
        end: {
          line: 329,
          column: 44
        }
      },
      "132": {
        start: {
          line: 331,
          column: 8
        },
        end: {
          line: 331,
          column: 29
        }
      },
      "133": {
        start: {
          line: 338,
          column: 8
        },
        end: {
          line: 338,
          column: 34
        }
      },
      "134": {
        start: {
          line: 339,
          column: 8
        },
        end: {
          line: 339,
          column: 43
        }
      },
      "135": {
        start: {
          line: 345,
          column: 8
        },
        end: {
          line: 353,
          column: 10
        }
      },
      "136": {
        start: {
          line: 359,
          column: 8
        },
        end: {
          line: 359,
          column: 34
        }
      },
      "137": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 360,
          column: 55
        }
      },
      "138": {
        start: {
          line: 361,
          column: 8
        },
        end: {
          line: 361,
          column: 63
        }
      },
      "139": {
        start: {
          line: 362,
          column: 8
        },
        end: {
          line: 362,
          column: 55
        }
      },
      "140": {
        start: {
          line: 363,
          column: 8
        },
        end: {
          line: 363,
          column: 48
        }
      },
      "141": {
        start: {
          line: 364,
          column: 8
        },
        end: {
          line: 364,
          column: 44
        }
      },
      "142": {
        start: {
          line: 368,
          column: 8
        },
        end: {
          line: 371,
          column: 23
        }
      },
      "143": {
        start: {
          line: 369,
          column: 22
        },
        end: {
          line: 369,
          column: 47
        }
      },
      "144": {
        start: {
          line: 374,
          column: 32
        },
        end: {
          line: 374,
          column: 73
        }
      },
      "145": {
        start: {
          line: 375,
          column: 8
        },
        end: {
          line: 378,
          column: 9
        }
      },
      "146": {
        start: {
          line: 376,
          column: 12
        },
        end: {
          line: 376,
          column: 50
        }
      },
      "147": {
        start: {
          line: 377,
          column: 12
        },
        end: {
          line: 377,
          column: 19
        }
      },
      "148": {
        start: {
          line: 379,
          column: 29
        },
        end: {
          line: 379,
          column: 90
        }
      },
      "149": {
        start: {
          line: 379,
          column: 59
        },
        end: {
          line: 379,
          column: 82
        }
      },
      "150": {
        start: {
          line: 380,
          column: 8
        },
        end: {
          line: 380,
          column: 90
        }
      },
      "151": {
        start: {
          line: 381,
          column: 8
        },
        end: {
          line: 381,
          column: 54
        }
      },
      "152": {
        start: {
          line: 384,
          column: 0
        },
        end: {
          line: 384,
          column: 52
        }
      },
      "153": {
        start: {
          line: 388,
          column: 0
        },
        end: {
          line: 388,
          column: 58
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 29
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 13
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 32
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 28
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        loc: {
          start: {
            line: 54,
            column: 63
          },
          end: {
            line: 70,
            column: 5
          }
        },
        line: 54
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        },
        loc: {
          start: {
            line: 74,
            column: 41
          },
          end: {
            line: 86,
            column: 5
          }
        },
        line: 74
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 85,
            column: 36
          },
          end: {
            line: 85,
            column: 37
          }
        },
        loc: {
          start: {
            line: 85,
            column: 46
          },
          end: {
            line: 85,
            column: 73
          }
        },
        line: 85
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 88,
            column: 4
          },
          end: {
            line: 88,
            column: 5
          }
        },
        loc: {
          start: {
            line: 88,
            column: 40
          },
          end: {
            line: 108,
            column: 5
          }
        },
        line: 88
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 91,
            column: 43
          },
          end: {
            line: 91,
            column: 44
          }
        },
        loc: {
          start: {
            line: 91,
            column: 48
          },
          end: {
            line: 91,
            column: 54
          }
        },
        line: 91
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 109,
            column: 4
          },
          end: {
            line: 109,
            column: 5
          }
        },
        loc: {
          start: {
            line: 109,
            column: 40
          },
          end: {
            line: 135,
            column: 5
          }
        },
        line: 109
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 113,
            column: 26
          },
          end: {
            line: 113,
            column: 27
          }
        },
        loc: {
          start: {
            line: 113,
            column: 31
          },
          end: {
            line: 115,
            column: 9
          }
        },
        line: 113
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 117,
            column: 18
          },
          end: {
            line: 117,
            column: 19
          }
        },
        loc: {
          start: {
            line: 117,
            column: 32
          },
          end: {
            line: 117,
            column: 37
          }
        },
        line: 117
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 118,
            column: 17
          },
          end: {
            line: 118,
            column: 18
          }
        },
        loc: {
          start: {
            line: 118,
            column: 40
          },
          end: {
            line: 118,
            column: 62
          }
        },
        line: 118
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 136,
            column: 4
          },
          end: {
            line: 136,
            column: 5
          }
        },
        loc: {
          start: {
            line: 136,
            column: 39
          },
          end: {
            line: 166,
            column: 5
          }
        },
        line: 136
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 140,
            column: 26
          },
          end: {
            line: 140,
            column: 27
          }
        },
        loc: {
          start: {
            line: 140,
            column: 31
          },
          end: {
            line: 146,
            column: 9
          }
        },
        line: 140
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 143,
            column: 24
          },
          end: {
            line: 143,
            column: 25
          }
        },
        loc: {
          start: {
            line: 143,
            column: 29
          },
          end: {
            line: 143,
            column: 41
          }
        },
        line: 143
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 145,
            column: 26
          },
          end: {
            line: 145,
            column: 27
          }
        },
        loc: {
          start: {
            line: 145,
            column: 34
          },
          end: {
            line: 145,
            column: 59
          }
        },
        line: 145
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 167,
            column: 4
          },
          end: {
            line: 167,
            column: 5
          }
        },
        loc: {
          start: {
            line: 167,
            column: 41
          },
          end: {
            line: 171,
            column: 5
          }
        },
        line: 167
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 168,
            column: 36
          },
          end: {
            line: 168,
            column: 37
          }
        },
        loc: {
          start: {
            line: 168,
            column: 41
          },
          end: {
            line: 168,
            column: 47
          }
        },
        line: 168
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 169,
            column: 41
          },
          end: {
            line: 169,
            column: 42
          }
        },
        loc: {
          start: {
            line: 169,
            column: 46
          },
          end: {
            line: 169,
            column: 56
          }
        },
        line: 169
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 172,
            column: 4
          },
          end: {
            line: 172,
            column: 5
          }
        },
        loc: {
          start: {
            line: 172,
            column: 33
          },
          end: {
            line: 174,
            column: 5
          }
        },
        line: 172
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 175,
            column: 4
          },
          end: {
            line: 175,
            column: 5
          }
        },
        loc: {
          start: {
            line: 175,
            column: 40
          },
          end: {
            line: 179,
            column: 5
          }
        },
        line: 175
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 177,
            column: 17
          },
          end: {
            line: 177,
            column: 18
          }
        },
        loc: {
          start: {
            line: 177,
            column: 22
          },
          end: {
            line: 177,
            column: 66
          }
        },
        line: 177
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 180,
            column: 4
          },
          end: {
            line: 180,
            column: 5
          }
        },
        loc: {
          start: {
            line: 180,
            column: 47
          },
          end: {
            line: 188,
            column: 5
          }
        },
        line: 180
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 181,
            column: 38
          },
          end: {
            line: 181,
            column: 39
          }
        },
        loc: {
          start: {
            line: 181,
            column: 43
          },
          end: {
            line: 181,
            column: 49
          }
        },
        line: 181
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 185,
            column: 43
          },
          end: {
            line: 185,
            column: 44
          }
        },
        loc: {
          start: {
            line: 185,
            column: 48
          },
          end: {
            line: 185,
            column: 66
          }
        },
        line: 185
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 189,
            column: 4
          },
          end: {
            line: 189,
            column: 5
          }
        },
        loc: {
          start: {
            line: 189,
            column: 34
          },
          end: {
            line: 195,
            column: 5
          }
        },
        line: 189
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 192,
            column: 46
          },
          end: {
            line: 192,
            column: 47
          }
        },
        loc: {
          start: {
            line: 192,
            column: 58
          },
          end: {
            line: 192,
            column: 76
          }
        },
        line: 192
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 196,
            column: 4
          },
          end: {
            line: 196,
            column: 5
          }
        },
        loc: {
          start: {
            line: 196,
            column: 38
          },
          end: {
            line: 212,
            column: 5
          }
        },
        line: 196
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 198,
            column: 25
          },
          end: {
            line: 198,
            column: 26
          }
        },
        loc: {
          start: {
            line: 198,
            column: 36
          },
          end: {
            line: 210,
            column: 9
          }
        },
        line: 198
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 213,
            column: 4
          },
          end: {
            line: 213,
            column: 5
          }
        },
        loc: {
          start: {
            line: 213,
            column: 48
          },
          end: {
            line: 239,
            column: 5
          }
        },
        line: 213
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 226,
            column: 49
          },
          end: {
            line: 226,
            column: 50
          }
        },
        loc: {
          start: {
            line: 226,
            column: 54
          },
          end: {
            line: 226,
            column: 60
          }
        },
        line: 226
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 240,
            column: 4
          },
          end: {
            line: 240,
            column: 5
          }
        },
        loc: {
          start: {
            line: 240,
            column: 25
          },
          end: {
            line: 245,
            column: 5
          }
        },
        line: 240
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 242,
            column: 18
          },
          end: {
            line: 242,
            column: 19
          }
        },
        loc: {
          start: {
            line: 242,
            column: 36
          },
          end: {
            line: 242,
            column: 59
          }
        },
        line: 242
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 244,
            column: 25
          },
          end: {
            line: 244,
            column: 26
          }
        },
        loc: {
          start: {
            line: 244,
            column: 36
          },
          end: {
            line: 244,
            column: 61
          }
        },
        line: 244
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 253,
            column: 4
          },
          end: {
            line: 253,
            column: 5
          }
        },
        loc: {
          start: {
            line: 253,
            column: 29
          },
          end: {
            line: 272,
            column: 5
          }
        },
        line: 253
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 276,
            column: 4
          },
          end: {
            line: 276,
            column: 5
          }
        },
        loc: {
          start: {
            line: 276,
            column: 71
          },
          end: {
            line: 291,
            column: 5
          }
        },
        line: 276
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 295,
            column: 4
          },
          end: {
            line: 295,
            column: 5
          }
        },
        loc: {
          start: {
            line: 295,
            column: 34
          },
          end: {
            line: 299,
            column: 5
          }
        },
        line: 295
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 303,
            column: 4
          },
          end: {
            line: 303,
            column: 5
          }
        },
        loc: {
          start: {
            line: 303,
            column: 30
          },
          end: {
            line: 305,
            column: 5
          }
        },
        line: 303
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 309,
            column: 4
          },
          end: {
            line: 309,
            column: 5
          }
        },
        loc: {
          start: {
            line: 309,
            column: 87
          },
          end: {
            line: 321,
            column: 5
          }
        },
        line: 309
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 325,
            column: 4
          },
          end: {
            line: 325,
            column: 5
          }
        },
        loc: {
          start: {
            line: 325,
            column: 19
          },
          end: {
            line: 332,
            column: 5
          }
        },
        line: 325
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 336,
            column: 4
          },
          end: {
            line: 336,
            column: 5
          }
        },
        loc: {
          start: {
            line: 336,
            column: 25
          },
          end: {
            line: 340,
            column: 5
          }
        },
        line: 336
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 344,
            column: 4
          },
          end: {
            line: 344,
            column: 5
          }
        },
        loc: {
          start: {
            line: 344,
            column: 19
          },
          end: {
            line: 354,
            column: 5
          }
        },
        line: 344
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 358,
            column: 4
          },
          end: {
            line: 358,
            column: 5
          }
        },
        loc: {
          start: {
            line: 358,
            column: 23
          },
          end: {
            line: 365,
            column: 5
          }
        },
        line: 358
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 367,
            column: 4
          },
          end: {
            line: 367,
            column: 5
          }
        },
        loc: {
          start: {
            line: 367,
            column: 41
          },
          end: {
            line: 372,
            column: 5
          }
        },
        line: 367
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 369,
            column: 17
          },
          end: {
            line: 369,
            column: 18
          }
        },
        loc: {
          start: {
            line: 369,
            column: 22
          },
          end: {
            line: 369,
            column: 47
          }
        },
        line: 369
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 373,
            column: 4
          },
          end: {
            line: 373,
            column: 5
          }
        },
        loc: {
          start: {
            line: 373,
            column: 25
          },
          end: {
            line: 382,
            column: 5
          }
        },
        line: 373
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 379,
            column: 52
          },
          end: {
            line: 379,
            column: 53
          }
        },
        loc: {
          start: {
            line: 379,
            column: 59
          },
          end: {
            line: 379,
            column: 82
          }
        },
        line: 379
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 13,
            column: 16
          },
          end: {
            line: 13,
            column: 27
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 13,
            column: 27
          }
        }],
        line: 13
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 25
          },
          end: {
            line: 17,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 25
          },
          end: {
            line: 17,
            column: 43
          }
        }, {
          start: {
            line: 17,
            column: 47
          },
          end: {
            line: 17,
            column: 50
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 18,
            column: 26
          },
          end: {
            line: 18,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 26
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 49
          },
          end: {
            line: 18,
            column: 53
          }
        }],
        line: 18
      },
      "3": {
        loc: {
          start: {
            line: 19,
            column: 31
          },
          end: {
            line: 19,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 31
          },
          end: {
            line: 19,
            column: 55
          }
        }, {
          start: {
            line: 19,
            column: 59
          },
          end: {
            line: 19,
            column: 60
          }
        }],
        line: 19
      },
      "4": {
        loc: {
          start: {
            line: 20,
            column: 23
          },
          end: {
            line: 20,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 23
          },
          end: {
            line: 20,
            column: 39
          }
        }, {
          start: {
            line: 20,
            column: 43
          },
          end: {
            line: 20,
            column: 46
          }
        }],
        line: 20
      },
      "5": {
        loc: {
          start: {
            line: 21,
            column: 33
          },
          end: {
            line: 21,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 33
          },
          end: {
            line: 21,
            column: 59
          }
        }, {
          start: {
            line: 21,
            column: 63
          },
          end: {
            line: 21,
            column: 69
          }
        }],
        line: 21
      },
      "6": {
        loc: {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 51
          }
        }, {
          start: {
            line: 22,
            column: 55
          },
          end: {
            line: 22,
            column: 59
          }
        }],
        line: 22
      },
      "7": {
        loc: {
          start: {
            line: 59,
            column: 33
          },
          end: {
            line: 59,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 33
          },
          end: {
            line: 59,
            column: 66
          }
        }, {
          start: {
            line: 59,
            column: 70
          },
          end: {
            line: 59,
            column: 71
          }
        }],
        line: 59
      },
      "8": {
        loc: {
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 63,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 63,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "9": {
        loc: {
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 65,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 65,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "10": {
        loc: {
          start: {
            line: 78,
            column: 12
          },
          end: {
            line: 83,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 12
          },
          end: {
            line: 83,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "11": {
        loc: {
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 106,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 106,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "12": {
        loc: {
          start: {
            line: 93,
            column: 12
          },
          end: {
            line: 93,
            column: 117
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 12
          },
          end: {
            line: 93,
            column: 46
          }
        }, {
          start: {
            line: 93,
            column: 50
          },
          end: {
            line: 93,
            column: 117
          }
        }],
        line: 93
      },
      "13": {
        loc: {
          start: {
            line: 114,
            column: 42
          },
          end: {
            line: 114,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 114,
            column: 42
          },
          end: {
            line: 114,
            column: 70
          }
        }, {
          start: {
            line: 114,
            column: 74
          },
          end: {
            line: 114,
            column: 75
          }
        }],
        line: 114
      },
      "14": {
        loc: {
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 133,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 133,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 120
      },
      "15": {
        loc: {
          start: {
            line: 120,
            column: 12
          },
          end: {
            line: 120,
            column: 109
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 120,
            column: 12
          },
          end: {
            line: 120,
            column: 42
          }
        }, {
          start: {
            line: 120,
            column: 46
          },
          end: {
            line: 120,
            column: 109
          }
        }],
        line: 120
      },
      "16": {
        loc: {
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 164,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 164,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "17": {
        loc: {
          start: {
            line: 150,
            column: 12
          },
          end: {
            line: 163,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 12
          },
          end: {
            line: 163,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "18": {
        loc: {
          start: {
            line: 150,
            column: 16
          },
          end: {
            line: 150,
            column: 119
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 150,
            column: 16
          },
          end: {
            line: 150,
            column: 49
          }
        }, {
          start: {
            line: 150,
            column: 53
          },
          end: {
            line: 150,
            column: 119
          }
        }],
        line: 150
      },
      "19": {
        loc: {
          start: {
            line: 182,
            column: 23
          },
          end: {
            line: 182,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 182,
            column: 50
          },
          end: {
            line: 182,
            column: 59
          }
        }, {
          start: {
            line: 182,
            column: 62
          },
          end: {
            line: 182,
            column: 64
          }
        }],
        line: 182
      },
      "20": {
        loc: {
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 184,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 184,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 183
      },
      "21": {
        loc: {
          start: {
            line: 183,
            column: 12
          },
          end: {
            line: 183,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 183,
            column: 12
          },
          end: {
            line: 183,
            column: 31
          }
        }, {
          start: {
            line: 183,
            column: 35
          },
          end: {
            line: 183,
            column: 54
          }
        }],
        line: 183
      },
      "22": {
        loc: {
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 191,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 191,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 190
      },
      "23": {
        loc: {
          start: {
            line: 199,
            column: 12
          },
          end: {
            line: 209,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 200,
            column: 16
          },
          end: {
            line: 202,
            column: 26
          }
        }, {
          start: {
            line: 203,
            column: 16
          },
          end: {
            line: 205,
            column: 26
          }
        }, {
          start: {
            line: 206,
            column: 16
          },
          end: {
            line: 208,
            column: 26
          }
        }],
        line: 199
      },
      "24": {
        loc: {
          start: {
            line: 215,
            column: 8
          },
          end: {
            line: 234,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 215,
            column: 8
          },
          end: {
            line: 234,
            column: 9
          }
        }, {
          start: {
            line: 220,
            column: 13
          },
          end: {
            line: 234,
            column: 9
          }
        }],
        line: 215
      },
      "25": {
        loc: {
          start: {
            line: 236,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 236,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 236
      },
      "26": {
        loc: {
          start: {
            line: 253,
            column: 16
          },
          end: {
            line: 253,
            column: 27
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 253,
            column: 25
          },
          end: {
            line: 253,
            column: 27
          }
        }],
        line: 253
      },
      "27": {
        loc: {
          start: {
            line: 255,
            column: 25
          },
          end: {
            line: 255,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 255,
            column: 25
          },
          end: {
            line: 255,
            column: 43
          }
        }, {
          start: {
            line: 255,
            column: 47
          },
          end: {
            line: 255,
            column: 50
          }
        }],
        line: 255
      },
      "28": {
        loc: {
          start: {
            line: 256,
            column: 26
          },
          end: {
            line: 256,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 256,
            column: 26
          },
          end: {
            line: 256,
            column: 45
          }
        }, {
          start: {
            line: 256,
            column: 49
          },
          end: {
            line: 256,
            column: 53
          }
        }],
        line: 256
      },
      "29": {
        loc: {
          start: {
            line: 257,
            column: 31
          },
          end: {
            line: 257,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 257,
            column: 31
          },
          end: {
            line: 257,
            column: 55
          }
        }, {
          start: {
            line: 257,
            column: 59
          },
          end: {
            line: 257,
            column: 60
          }
        }],
        line: 257
      },
      "30": {
        loc: {
          start: {
            line: 258,
            column: 23
          },
          end: {
            line: 258,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 258,
            column: 23
          },
          end: {
            line: 258,
            column: 39
          }
        }, {
          start: {
            line: 258,
            column: 43
          },
          end: {
            line: 258,
            column: 46
          }
        }],
        line: 258
      },
      "31": {
        loc: {
          start: {
            line: 259,
            column: 33
          },
          end: {
            line: 259,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 259,
            column: 33
          },
          end: {
            line: 259,
            column: 59
          }
        }, {
          start: {
            line: 259,
            column: 63
          },
          end: {
            line: 259,
            column: 69
          }
        }],
        line: 259
      },
      "32": {
        loc: {
          start: {
            line: 260,
            column: 29
          },
          end: {
            line: 260,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 260,
            column: 29
          },
          end: {
            line: 260,
            column: 51
          }
        }, {
          start: {
            line: 260,
            column: 55
          },
          end: {
            line: 260,
            column: 59
          }
        }],
        line: 260
      },
      "33": {
        loc: {
          start: {
            line: 284,
            column: 24
          },
          end: {
            line: 284,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 284,
            column: 48
          },
          end: {
            line: 284,
            column: 49
          }
        }, {
          start: {
            line: 284,
            column: 52
          },
          end: {
            line: 284,
            column: 85
          }
        }],
        line: 284
      },
      "34": {
        loc: {
          start: {
            line: 284,
            column: 52
          },
          end: {
            line: 284,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 284,
            column: 76
          },
          end: {
            line: 284,
            column: 79
          }
        }, {
          start: {
            line: 284,
            column: 82
          },
          end: {
            line: 284,
            column: 85
          }
        }],
        line: 284
      },
      "35": {
        loc: {
          start: {
            line: 290,
            column: 79
          },
          end: {
            line: 290,
            column: 162
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 290,
            column: 103
          },
          end: {
            line: 290,
            column: 113
          }
        }, {
          start: {
            line: 290,
            column: 116
          },
          end: {
            line: 290,
            column: 162
          }
        }],
        line: 290
      },
      "36": {
        loc: {
          start: {
            line: 290,
            column: 116
          },
          end: {
            line: 290,
            column: 162
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 290,
            column: 140
          },
          end: {
            line: 290,
            column: 150
          }
        }, {
          start: {
            line: 290,
            column: 153
          },
          end: {
            line: 290,
            column: 162
          }
        }],
        line: 290
      },
      "37": {
        loc: {
          start: {
            line: 309,
            column: 36
          },
          end: {
            line: 309,
            column: 85
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 309,
            column: 47
          },
          end: {
            line: 309,
            column: 85
          }
        }],
        line: 309
      },
      "38": {
        loc: {
          start: {
            line: 327,
            column: 8
          },
          end: {
            line: 330,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 327,
            column: 8
          },
          end: {
            line: 330,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 327
      },
      "39": {
        loc: {
          start: {
            line: 331,
            column: 15
          },
          end: {
            line: 331,
            column: 28
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 331,
            column: 15
          },
          end: {
            line: 331,
            column: 20
          }
        }, {
          start: {
            line: 331,
            column: 24
          },
          end: {
            line: 331,
            column: 28
          }
        }],
        line: 331
      },
      "40": {
        loc: {
          start: {
            line: 375,
            column: 8
          },
          end: {
            line: 378,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 375,
            column: 8
          },
          end: {
            line: 378,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 375
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dallionking/Vibe Projects/Vibe Workflow commands /context/memory/context-memory.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dallionking/Vibe Projects/Vibe Workflow commands /context/memory/context-memory.ts"],
      sourcesContent: ["/**\n * Context Memory Storage with Learning Capabilities\n * Stores and learns from context patterns, decisions, and usage\n */\n\nimport {\n  ContextFragment,\n  ContextPriority,\n  ContextPattern,\n  ContextDecision,\n  LearningMetrics,\n  MemoryEntry,\n  PatternRecognition\n} from '../types/context.types';\n\nimport { LRUCache } from '../cache/lru-cache';\n\n/**\n * Memory Configuration\n */\nexport interface MemoryConfig {\n  maxPatterns: number;\n  maxDecisions: number;\n  learningThreshold: number; // Minimum occurrences to establish pattern\n  decayRate: number; // How quickly unused patterns fade\n  persistenceInterval: number; // How often to save to disk (ms)\n  adaptiveWeights: boolean; // Whether to adapt pattern weights over time\n}\n\n/**\n * Pattern Recognition Engine\n */\nexport class PatternRecognitionEngine {\n  private patterns = new Map<string, ContextPattern>();\n  private patternUsage = new Map<string, number>();\n  private config: MemoryConfig;\n\n  constructor(config: Partial<MemoryConfig> = {}) {\n    this.config = {\n      maxPatterns: config.maxPatterns || 500,\n      maxDecisions: config.maxDecisions || 1000,\n      learningThreshold: config.learningThreshold || 3,\n      decayRate: config.decayRate || 0.1,\n      persistenceInterval: config.persistenceInterval || 300000, // 5 minutes\n      adaptiveWeights: config.adaptiveWeights || true\n    };\n  }\n\n  /**\n   * Analyze context fragments to identify patterns\n   */\n  public analyzeFragments(fragments: ContextFragment[]): PatternRecognition {\n    const recognition: PatternRecognition = {\n      identifiedPatterns: [],\n      confidenceScore: 0,\n      recommendations: [],\n      appliedPatterns: [],\n      timestamp: Date.now()\n    };\n\n    // Analyze sequence patterns\n    const sequencePatterns = this.identifySequencePatterns(fragments);\n    recognition.identifiedPatterns.push(...sequencePatterns);\n\n    // Analyze priority patterns\n    const priorityPatterns = this.identifyPriorityPatterns(fragments);\n    recognition.identifiedPatterns.push(...priorityPatterns);\n\n    // Analyze content patterns\n    const contentPatterns = this.identifyContentPatterns(fragments);\n    recognition.identifiedPatterns.push(...contentPatterns);\n\n    // Calculate confidence score\n    recognition.confidenceScore = this.calculateConfidence(recognition.identifiedPatterns);\n\n    // Generate recommendations\n    recognition.recommendations = this.generateRecommendations(recognition.identifiedPatterns);\n\n    return recognition;\n  }\n\n  /**\n   * Learn from successful context assemblies\n   */\n  public learnFromAssembly(\n    fragments: ContextFragment[],\n    assemblyResult: any,\n    userFeedback?: 'positive' | 'negative' | 'neutral'\n  ): void {\n    const signature = this.generateAssemblySignature(fragments);\n    \n    // Update pattern usage\n    for (const fragment of fragments) {\n      const patternKey = this.generatePatternKey(fragment);\n      const currentUsage = this.patternUsage.get(patternKey) || 0;\n      \n      // Weight by user feedback\n      let weight = 1;\n      if (userFeedback === 'positive') weight = 1.5;\n      if (userFeedback === 'negative') weight = 0.5;\n      \n      this.patternUsage.set(patternKey, currentUsage + weight);\n    }\n\n    // Create or update pattern\n    this.updatePattern(signature, fragments, assemblyResult);\n  }\n\n  /**\n   * Get pattern recommendations for context assembly\n   */\n  public getRecommendations(currentFragments: ContextFragment[]): ContextPattern[] {\n    const similarPatterns: ContextPattern[] = [];\n    \n    for (const [, pattern] of this.patterns) {\n      const similarity = this.calculateSimilarity(currentFragments, pattern.fragmentSignature);\n      \n      if (similarity > 0.7) { // 70% similarity threshold\n        similarPatterns.push({\n          ...pattern,\n          confidence: similarity * pattern.confidence\n        });\n      }\n    }\n\n    return similarPatterns.sort((a, b) => b.confidence - a.confidence);\n  }\n\n  // Private pattern analysis methods\n\n  private identifySequencePatterns(fragments: ContextFragment[]): ContextPattern[] {\n    const patterns: ContextPattern[] = [];\n    \n    // Analyze fragment type sequences\n    const typeSequence = fragments.map(f => f.type);\n    const sequenceKey = typeSequence.join(' \u2192 ');\n    \n    if (this.patternUsage.has(sequenceKey) && this.patternUsage.get(sequenceKey)! >= this.config.learningThreshold) {\n      patterns.push({\n        id: `sequence-${Date.now()}`,\n        type: 'sequence',\n        name: 'Fragment Type Sequence',\n        description: `Common sequence: ${sequenceKey}`,\n        fragmentSignature: typeSequence,\n        contextSignature: this.generateContextSignature(fragments),\n        confidence: Math.min(this.patternUsage.get(sequenceKey)! / 10, 1),\n        usage: this.patternUsage.get(sequenceKey)!,\n        lastUsed: Date.now(),\n        created: Date.now()\n      });\n    }\n\n    return patterns;\n  }\n\n  private identifyPriorityPatterns(fragments: ContextFragment[]): ContextPattern[] {\n    const patterns: ContextPattern[] = [];\n    \n    // Analyze priority distributions\n    const priorityDist = new Map<ContextPriority, number>();\n    fragments.forEach(f => {\n      priorityDist.set(f.priority, (priorityDist.get(f.priority) || 0) + 1);\n    });\n\n    const distKey = Array.from(priorityDist.entries())\n      .sort(([a], [b]) => b - a)\n      .map(([priority, count]) => `${priority}:${count}`)\n      .join(',');\n\n    if (this.patternUsage.has(distKey) && this.patternUsage.get(distKey)! >= this.config.learningThreshold) {\n      patterns.push({\n        id: `priority-${Date.now()}`,\n        type: 'priority-distribution',\n        name: 'Priority Distribution Pattern',\n        description: `Common priority distribution: ${distKey}`,\n        fragmentSignature: Array.from(priorityDist.keys()),\n        contextSignature: this.generateContextSignature(fragments),\n        confidence: Math.min(this.patternUsage.get(distKey)! / 15, 1),\n        usage: this.patternUsage.get(distKey)!,\n        lastUsed: Date.now(),\n        created: Date.now()\n      });\n    }\n\n    return patterns;\n  }\n\n  private identifyContentPatterns(fragments: ContextFragment[]): ContextPattern[] {\n    const patterns: ContextPattern[] = [];\n    \n    // Analyze common content keywords\n    const contentKeywords = new Set<string>();\n    \n    fragments.forEach(f => {\n      const words = f.content.toLowerCase()\n        .split(/\\W+/)\n        .filter(w => w.length > 3)\n        .slice(0, 10); // Top 10 words per fragment\n      \n      words.forEach(word => contentKeywords.add(word));\n    });\n\n    if (contentKeywords.size > 5) {\n      const keywordArray = Array.from(contentKeywords).sort();\n      const contentKey = keywordArray.slice(0, 5).join(',');\n      \n      if (this.patternUsage.has(contentKey) && this.patternUsage.get(contentKey)! >= this.config.learningThreshold) {\n        patterns.push({\n          id: `content-${Date.now()}`,\n          type: 'content-similarity',\n          name: 'Content Keyword Pattern',\n          description: `Common keywords: ${contentKey}`,\n          fragmentSignature: keywordArray,\n          contextSignature: this.generateContextSignature(fragments),\n          confidence: Math.min(this.patternUsage.get(contentKey)! / 8, 1),\n          usage: this.patternUsage.get(contentKey)!,\n          lastUsed: Date.now(),\n          created: Date.now()\n        });\n      }\n    }\n\n    return patterns;\n  }\n\n  private generateAssemblySignature(fragments: ContextFragment[]): string {\n    const types = fragments.map(f => f.type).sort();\n    const priorities = fragments.map(f => f.priority).sort();\n    return `${types.join(',')}|${priorities.join(',')}`;\n  }\n\n  private generatePatternKey(fragment: ContextFragment): string {\n    return `${fragment.type}-${fragment.priority}`;\n  }\n\n  private generateContextSignature(fragments: ContextFragment[]): string {\n    return fragments\n      .map(f => `${f.type}:${f.priority}:${f.tokenEstimate}`)\n      .join('|');\n  }\n\n  private calculateSimilarity(fragments1: ContextFragment[], signature: any[]): number {\n    const types1 = fragments1.map(f => f.type);\n    const types2 = Array.isArray(signature) ? signature : [];\n    \n    if (types1.length === 0 || types2.length === 0) return 0;\n    \n    const intersection = types1.filter(t => types2.includes(t));\n    const union = [...new Set([...types1, ...types2])];\n    \n    return intersection.length / union.length;\n  }\n\n  private calculateConfidence(patterns: ContextPattern[]): number {\n    if (patterns.length === 0) return 0;\n    \n    const avgConfidence = patterns.reduce((sum, p) => sum + p.confidence, 0) / patterns.length;\n    const usageWeight = Math.min(patterns.length / 5, 1);\n    \n    return avgConfidence * usageWeight;\n  }\n\n  private generateRecommendations(patterns: ContextPattern[]): string[] {\n    const recommendations: string[] = [];\n    \n    patterns.forEach(pattern => {\n      switch (pattern.type) {\n        case 'sequence':\n          recommendations.push(`Consider using the proven sequence: ${pattern.description}`);\n          break;\n        case 'priority-distribution':\n          recommendations.push(`Optimal priority distribution found: ${pattern.description}`);\n          break;\n        case 'content-similarity':\n          recommendations.push(`Similar content patterns suggest: ${pattern.description}`);\n          break;\n      }\n    });\n\n    return recommendations;\n  }\n\n  private updatePattern(signature: string, fragments: ContextFragment[], result: any): void {\n    const existing = this.patterns.get(signature);\n    \n    if (existing) {\n      existing.usage++;\n      existing.lastUsed = Date.now();\n      existing.confidence = Math.min(existing.confidence + 0.1, 1);\n    } else {\n      const newPattern: ContextPattern = {\n        id: `pattern-${Date.now()}`,\n        type: 'assembly',\n        name: 'Assembly Pattern',\n        description: `Pattern for ${fragments.length} fragments`,\n        fragmentSignature: fragments.map(f => f.type),\n        contextSignature: signature,\n        confidence: 0.5,\n        usage: 1,\n        lastUsed: Date.now(),\n        created: Date.now()\n      };\n      \n      this.patterns.set(signature, newPattern);\n    }\n\n    // Cleanup old patterns if needed\n    if (this.patterns.size > this.config.maxPatterns) {\n      this.cleanupOldPatterns();\n    }\n  }\n\n  private cleanupOldPatterns(): void {\n    const sortedPatterns = Array.from(this.patterns.entries())\n      .sort(([, a], [, b]) => a.lastUsed - b.lastUsed);\n    \n    const toRemove = sortedPatterns.slice(0, Math.floor(this.config.maxPatterns * 0.1));\n    toRemove.forEach(([key]) => this.patterns.delete(key));\n  }\n}\n\n/**\n * Context Memory Manager\n * Central hub for storing and retrieving context memory\n */\nexport class ContextMemoryManager {\n  private patternEngine: PatternRecognitionEngine;\n  private decisionHistory: Map<string, ContextDecision>;\n  private memoryCache: Map<string, MemoryEntry>;\n  private config: MemoryConfig;\n  private learningMetrics: LearningMetrics;\n\n  constructor(config: Partial<MemoryConfig> = {}) {\n    this.config = {\n      maxPatterns: config.maxPatterns || 500,\n      maxDecisions: config.maxDecisions || 1000,\n      learningThreshold: config.learningThreshold || 3,\n      decayRate: config.decayRate || 0.1,\n      persistenceInterval: config.persistenceInterval || 300000,\n      adaptiveWeights: config.adaptiveWeights || true\n    };\n\n    this.patternEngine = new PatternRecognitionEngine(this.config);\n    this.decisionHistory = new Map();\n    this.memoryCache = new Map();\n\n    this.learningMetrics = {\n      patternsLearned: 0,\n      decisionsRecorded: 0,\n      recommendationsGenerated: 0,\n      accuracyRate: 0,\n      lastUpdated: Date.now()\n    };\n  }\n\n  /**\n   * Record a context decision for learning\n   */\n  public recordDecision(\n    contextId: string,\n    decision: string,\n    reasoning: string,\n    outcome: 'success' | 'failure' | 'partial',\n    fragments: ContextFragment[]\n  ): void {\n    const contextDecision: ContextDecision = {\n      id: `decision-${Date.now()}`,\n      contextId,\n      decision,\n      reasoning,\n      outcome,\n      contextSignature: this.generateDecisionSignature(fragments),\n      confidence: outcome === 'success' ? 1 : outcome === 'partial' ? 0.5 : 0.2,\n      timestamp: Date.now()\n    };\n\n    this.decisionHistory.set(contextDecision.id, contextDecision);\n    this.learningMetrics.decisionsRecorded++;\n    \n    // Learn from the decision\n    this.patternEngine.learnFromAssembly(\n      fragments, \n      { decision, outcome }, \n      outcome === 'success' ? 'positive' : outcome === 'failure' ? 'negative' : 'neutral'\n    );\n  }\n\n  /**\n   * Get recommendations based on similar contexts\n   */\n  public getRecommendations(fragments: ContextFragment[]): ContextPattern[] {\n    const recommendations = this.patternEngine.getRecommendations(fragments);\n    this.learningMetrics.recommendationsGenerated++;\n    return recommendations;\n  }\n\n  /**\n   * Analyze current context for patterns\n   */\n  public analyzeContext(fragments: ContextFragment[]): PatternRecognition {\n    return this.patternEngine.analyzeFragments(fragments);\n  }\n\n  /**\n   * Store memory entry\n   */\n  public storeMemory(\n    key: string,\n    content: string,\n    type: 'pattern' | 'decision' | 'learning',\n    priority: ContextPriority = ContextPriority.MEDIUM\n  ): void {\n    const memoryEntry: MemoryEntry = {\n      id: `memory-${Date.now()}`,\n      key,\n      content,\n      type,\n      priority,\n      accessCount: 0,\n      created: Date.now(),\n      lastAccessed: Date.now()\n    };\n\n    this.memoryCache.set(key, memoryEntry);\n  }\n\n  /**\n   * Retrieve memory entry\n   */\n  public getMemory(key: string): MemoryEntry | null {\n    const entry = this.memoryCache.get(key);\n    if (entry) {\n      entry.accessCount++;\n      entry.lastAccessed = Date.now();\n    }\n    return entry || null;\n  }\n\n  /**\n   * Get learning metrics\n   */\n  public getLearningMetrics(): LearningMetrics {\n    // Update accuracy rate based on recent decisions\n    this.updateAccuracyRate();\n    return { ...this.learningMetrics };\n  }\n\n  /**\n   * Export memory state\n   */\n  public exportMemory(): MemoryExport {\n    return {\n      config: this.config,\n      patterns: this.patternEngine['patterns'],\n      patternUsage: this.patternEngine['patternUsage'],\n      decisions: Array.from(this.decisionHistory.entries()),\n      memory: Array.from(this.memoryCache.entries()),\n      metrics: this.learningMetrics,\n      timestamp: Date.now()\n    };\n  }\n\n  /**\n   * Import memory state\n   */\n  public importMemory(data: MemoryExport): void {\n    this.config = data.config;\n    this.patternEngine['patterns'] = data.patterns;\n    this.patternEngine['patternUsage'] = data.patternUsage;\n    this.decisionHistory = new Map(data.decisions);\n    this.memoryCache = new Map(data.memory);\n    this.learningMetrics = data.metrics;\n  }\n\n  // Private helper methods\n\n  private generateDecisionSignature(fragments: ContextFragment[]): string {\n    return fragments\n      .map(f => `${f.type}:${f.priority}`)\n      .sort()\n      .join('|');\n  }\n\n  private updateAccuracyRate(): void {\n    const recentDecisions = Array.from(this.decisionHistory.values());\n    if (recentDecisions.length === 0) {\n      this.learningMetrics.accuracyRate = 0;\n      return;\n    }\n\n    const successCount = recentDecisions.filter((d: ContextDecision) => d.outcome === 'success').length;\n    this.learningMetrics.accuracyRate = (successCount / recentDecisions.length) * 100;\n    this.learningMetrics.lastUpdated = Date.now();\n  }\n}\n\n/**\n * Memory export format\n */\ninterface MemoryExport {\n  config: MemoryConfig;\n  patterns: Map<string, ContextPattern>;\n  patternUsage: Map<string, number>;\n  decisions: any; // LRU cache export\n  memory: any; // LRU cache export\n  metrics: LearningMetrics;\n  timestamp: number;\n}\n\n/**\n * Singleton instance for context memory management\n */\nexport const contextMemoryManager = new ContextMemoryManager();"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1282b247564db37b2b688e126d287ac38b92a0ba"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_18qgtka0l9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_18qgtka0l9();
cov_18qgtka0l9().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_18qgtka0l9().s[1]++;
exports.contextMemoryManager = exports.ContextMemoryManager = exports.PatternRecognitionEngine = void 0;
const context_types_1 =
/* istanbul ignore next */
(cov_18qgtka0l9().s[2]++, require("../types/context.types"));
/**
 * Pattern Recognition Engine
 */
class PatternRecognitionEngine {
  constructor(config =
  /* istanbul ignore next */
  (cov_18qgtka0l9().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_18qgtka0l9().f[0]++;
    cov_18qgtka0l9().s[3]++;
    this.patterns = new Map();
    /* istanbul ignore next */
    cov_18qgtka0l9().s[4]++;
    this.patternUsage = new Map();
    /* istanbul ignore next */
    cov_18qgtka0l9().s[5]++;
    this.config = {
      maxPatterns:
      /* istanbul ignore next */
      (cov_18qgtka0l9().b[1][0]++, config.maxPatterns) ||
      /* istanbul ignore next */
      (cov_18qgtka0l9().b[1][1]++, 500),
      maxDecisions:
      /* istanbul ignore next */
      (cov_18qgtka0l9().b[2][0]++, config.maxDecisions) ||
      /* istanbul ignore next */
      (cov_18qgtka0l9().b[2][1]++, 1000),
      learningThreshold:
      /* istanbul ignore next */
      (cov_18qgtka0l9().b[3][0]++, config.learningThreshold) ||
      /* istanbul ignore next */
      (cov_18qgtka0l9().b[3][1]++, 3),
      decayRate:
      /* istanbul ignore next */
      (cov_18qgtka0l9().b[4][0]++, config.decayRate) ||
      /* istanbul ignore next */
      (cov_18qgtka0l9().b[4][1]++, 0.1),
      persistenceInterval:
      /* istanbul ignore next */
      (cov_18qgtka0l9().b[5][0]++, config.persistenceInterval) ||
      /* istanbul ignore next */
      (cov_18qgtka0l9().b[5][1]++, 300000),
      // 5 minutes
      adaptiveWeights:
      /* istanbul ignore next */
      (cov_18qgtka0l9().b[6][0]++, config.adaptiveWeights) ||
      /* istanbul ignore next */
      (cov_18qgtka0l9().b[6][1]++, true)
    };
  }
  /**
   * Analyze context fragments to identify patterns
   */
  analyzeFragments(fragments) {
    /* istanbul ignore next */
    cov_18qgtka0l9().f[1]++;
    const recognition =
    /* istanbul ignore next */
    (cov_18qgtka0l9().s[6]++, {
      identifiedPatterns: [],
      confidenceScore: 0,
      recommendations: [],
      appliedPatterns: [],
      timestamp: Date.now()
    });
    // Analyze sequence patterns
    const sequencePatterns =
    /* istanbul ignore next */
    (cov_18qgtka0l9().s[7]++, this.identifySequencePatterns(fragments));
    /* istanbul ignore next */
    cov_18qgtka0l9().s[8]++;
    recognition.identifiedPatterns.push(...sequencePatterns);
    // Analyze priority patterns
    const priorityPatterns =
    /* istanbul ignore next */
    (cov_18qgtka0l9().s[9]++, this.identifyPriorityPatterns(fragments));
    /* istanbul ignore next */
    cov_18qgtka0l9().s[10]++;
    recognition.identifiedPatterns.push(...priorityPatterns);
    // Analyze content patterns
    const contentPatterns =
    /* istanbul ignore next */
    (cov_18qgtka0l9().s[11]++, this.identifyContentPatterns(fragments));
    /* istanbul ignore next */
    cov_18qgtka0l9().s[12]++;
    recognition.identifiedPatterns.push(...contentPatterns);
    // Calculate confidence score
    /* istanbul ignore next */
    cov_18qgtka0l9().s[13]++;
    recognition.confidenceScore = this.calculateConfidence(recognition.identifiedPatterns);
    // Generate recommendations
    /* istanbul ignore next */
    cov_18qgtka0l9().s[14]++;
    recognition.recommendations = this.generateRecommendations(recognition.identifiedPatterns);
    /* istanbul ignore next */
    cov_18qgtka0l9().s[15]++;
    return recognition;
  }
  /**
   * Learn from successful context assemblies
   */
  learnFromAssembly(fragments, assemblyResult, userFeedback) {
    /* istanbul ignore next */
    cov_18qgtka0l9().f[2]++;
    const signature =
    /* istanbul ignore next */
    (cov_18qgtka0l9().s[16]++, this.generateAssemblySignature(fragments));
    // Update pattern usage
    /* istanbul ignore next */
    cov_18qgtka0l9().s[17]++;
    for (const fragment of fragments) {
      const patternKey =
      /* istanbul ignore next */
      (cov_18qgtka0l9().s[18]++, this.generatePatternKey(fragment));
      const currentUsage =
      /* istanbul ignore next */
      (cov_18qgtka0l9().s[19]++,
      /* istanbul ignore next */
      (cov_18qgtka0l9().b[7][0]++, this.patternUsage.get(patternKey)) ||
      /* istanbul ignore next */
      (cov_18qgtka0l9().b[7][1]++, 0));
      // Weight by user feedback
      let weight =
      /* istanbul ignore next */
      (cov_18qgtka0l9().s[20]++, 1);
      /* istanbul ignore next */
      cov_18qgtka0l9().s[21]++;
      if (userFeedback === 'positive') {
        /* istanbul ignore next */
        cov_18qgtka0l9().b[8][0]++;
        cov_18qgtka0l9().s[22]++;
        weight = 1.5;
      } else
      /* istanbul ignore next */
      {
        cov_18qgtka0l9().b[8][1]++;
      }
      cov_18qgtka0l9().s[23]++;
      if (userFeedback === 'negative') {
        /* istanbul ignore next */
        cov_18qgtka0l9().b[9][0]++;
        cov_18qgtka0l9().s[24]++;
        weight = 0.5;
      } else
      /* istanbul ignore next */
      {
        cov_18qgtka0l9().b[9][1]++;
      }
      cov_18qgtka0l9().s[25]++;
      this.patternUsage.set(patternKey, currentUsage + weight);
    }
    // Create or update pattern
    /* istanbul ignore next */
    cov_18qgtka0l9().s[26]++;
    this.updatePattern(signature, fragments, assemblyResult);
  }
  /**
   * Get pattern recommendations for context assembly
   */
  getRecommendations(currentFragments) {
    /* istanbul ignore next */
    cov_18qgtka0l9().f[3]++;
    const similarPatterns =
    /* istanbul ignore next */
    (cov_18qgtka0l9().s[27]++, []);
    /* istanbul ignore next */
    cov_18qgtka0l9().s[28]++;
    for (const [, pattern] of this.patterns) {
      const similarity =
      /* istanbul ignore next */
      (cov_18qgtka0l9().s[29]++, this.calculateSimilarity(currentFragments, pattern.fragmentSignature));
      /* istanbul ignore next */
      cov_18qgtka0l9().s[30]++;
      if (similarity > 0.7) {
        /* istanbul ignore next */
        cov_18qgtka0l9().b[10][0]++;
        cov_18qgtka0l9().s[31]++;
        // 70% similarity threshold
        similarPatterns.push({
          ...pattern,
          confidence: similarity * pattern.confidence
        });
      } else
      /* istanbul ignore next */
      {
        cov_18qgtka0l9().b[10][1]++;
      }
    }
    /* istanbul ignore next */
    cov_18qgtka0l9().s[32]++;
    return similarPatterns.sort((a, b) => {
      /* istanbul ignore next */
      cov_18qgtka0l9().f[4]++;
      cov_18qgtka0l9().s[33]++;
      return b.confidence - a.confidence;
    });
  }
  // Private pattern analysis methods
  identifySequencePatterns(fragments) {
    /* istanbul ignore next */
    cov_18qgtka0l9().f[5]++;
    const patterns =
    /* istanbul ignore next */
    (cov_18qgtka0l9().s[34]++, []);
    // Analyze fragment type sequences
    const typeSequence =
    /* istanbul ignore next */
    (cov_18qgtka0l9().s[35]++, fragments.map(f => {
      /* istanbul ignore next */
      cov_18qgtka0l9().f[6]++;
      cov_18qgtka0l9().s[36]++;
      return f.type;
    }));
    const sequenceKey =
    /* istanbul ignore next */
    (cov_18qgtka0l9().s[37]++, typeSequence.join(' → '));
    /* istanbul ignore next */
    cov_18qgtka0l9().s[38]++;
    if (
    /* istanbul ignore next */
    (cov_18qgtka0l9().b[12][0]++, this.patternUsage.has(sequenceKey)) &&
    /* istanbul ignore next */
    (cov_18qgtka0l9().b[12][1]++, this.patternUsage.get(sequenceKey) >= this.config.learningThreshold)) {
      /* istanbul ignore next */
      cov_18qgtka0l9().b[11][0]++;
      cov_18qgtka0l9().s[39]++;
      patterns.push({
        id: `sequence-${Date.now()}`,
        type: 'sequence',
        name: 'Fragment Type Sequence',
        description: `Common sequence: ${sequenceKey}`,
        fragmentSignature: typeSequence,
        contextSignature: this.generateContextSignature(fragments),
        confidence: Math.min(this.patternUsage.get(sequenceKey) / 10, 1),
        usage: this.patternUsage.get(sequenceKey),
        lastUsed: Date.now(),
        created: Date.now()
      });
    } else
    /* istanbul ignore next */
    {
      cov_18qgtka0l9().b[11][1]++;
    }
    cov_18qgtka0l9().s[40]++;
    return patterns;
  }
  identifyPriorityPatterns(fragments) {
    /* istanbul ignore next */
    cov_18qgtka0l9().f[7]++;
    const patterns =
    /* istanbul ignore next */
    (cov_18qgtka0l9().s[41]++, []);
    // Analyze priority distributions
    const priorityDist =
    /* istanbul ignore next */
    (cov_18qgtka0l9().s[42]++, new Map());
    /* istanbul ignore next */
    cov_18qgtka0l9().s[43]++;
    fragments.forEach(f => {
      /* istanbul ignore next */
      cov_18qgtka0l9().f[8]++;
      cov_18qgtka0l9().s[44]++;
      priorityDist.set(f.priority, (
      /* istanbul ignore next */
      (cov_18qgtka0l9().b[13][0]++, priorityDist.get(f.priority)) ||
      /* istanbul ignore next */
      (cov_18qgtka0l9().b[13][1]++, 0)) + 1);
    });
    const distKey =
    /* istanbul ignore next */
    (cov_18qgtka0l9().s[45]++, Array.from(priorityDist.entries()).sort(([a], [b]) => {
      /* istanbul ignore next */
      cov_18qgtka0l9().f[9]++;
      cov_18qgtka0l9().s[46]++;
      return b - a;
    }).map(([priority, count]) => {
      /* istanbul ignore next */
      cov_18qgtka0l9().f[10]++;
      cov_18qgtka0l9().s[47]++;
      return `${priority}:${count}`;
    }).join(','));
    /* istanbul ignore next */
    cov_18qgtka0l9().s[48]++;
    if (
    /* istanbul ignore next */
    (cov_18qgtka0l9().b[15][0]++, this.patternUsage.has(distKey)) &&
    /* istanbul ignore next */
    (cov_18qgtka0l9().b[15][1]++, this.patternUsage.get(distKey) >= this.config.learningThreshold)) {
      /* istanbul ignore next */
      cov_18qgtka0l9().b[14][0]++;
      cov_18qgtka0l9().s[49]++;
      patterns.push({
        id: `priority-${Date.now()}`,
        type: 'priority-distribution',
        name: 'Priority Distribution Pattern',
        description: `Common priority distribution: ${distKey}`,
        fragmentSignature: Array.from(priorityDist.keys()),
        contextSignature: this.generateContextSignature(fragments),
        confidence: Math.min(this.patternUsage.get(distKey) / 15, 1),
        usage: this.patternUsage.get(distKey),
        lastUsed: Date.now(),
        created: Date.now()
      });
    } else
    /* istanbul ignore next */
    {
      cov_18qgtka0l9().b[14][1]++;
    }
    cov_18qgtka0l9().s[50]++;
    return patterns;
  }
  identifyContentPatterns(fragments) {
    /* istanbul ignore next */
    cov_18qgtka0l9().f[11]++;
    const patterns =
    /* istanbul ignore next */
    (cov_18qgtka0l9().s[51]++, []);
    // Analyze common content keywords
    const contentKeywords =
    /* istanbul ignore next */
    (cov_18qgtka0l9().s[52]++, new Set());
    /* istanbul ignore next */
    cov_18qgtka0l9().s[53]++;
    fragments.forEach(f => {
      /* istanbul ignore next */
      cov_18qgtka0l9().f[12]++;
      const words =
      /* istanbul ignore next */
      (cov_18qgtka0l9().s[54]++, f.content.toLowerCase().split(/\W+/).filter(w => {
        /* istanbul ignore next */
        cov_18qgtka0l9().f[13]++;
        cov_18qgtka0l9().s[55]++;
        return w.length > 3;
      }).slice(0, 10)); // Top 10 words per fragment
      /* istanbul ignore next */
      cov_18qgtka0l9().s[56]++;
      words.forEach(word => {
        /* istanbul ignore next */
        cov_18qgtka0l9().f[14]++;
        cov_18qgtka0l9().s[57]++;
        return contentKeywords.add(word);
      });
    });
    /* istanbul ignore next */
    cov_18qgtka0l9().s[58]++;
    if (contentKeywords.size > 5) {
      /* istanbul ignore next */
      cov_18qgtka0l9().b[16][0]++;
      const keywordArray =
      /* istanbul ignore next */
      (cov_18qgtka0l9().s[59]++, Array.from(contentKeywords).sort());
      const contentKey =
      /* istanbul ignore next */
      (cov_18qgtka0l9().s[60]++, keywordArray.slice(0, 5).join(','));
      /* istanbul ignore next */
      cov_18qgtka0l9().s[61]++;
      if (
      /* istanbul ignore next */
      (cov_18qgtka0l9().b[18][0]++, this.patternUsage.has(contentKey)) &&
      /* istanbul ignore next */
      (cov_18qgtka0l9().b[18][1]++, this.patternUsage.get(contentKey) >= this.config.learningThreshold)) {
        /* istanbul ignore next */
        cov_18qgtka0l9().b[17][0]++;
        cov_18qgtka0l9().s[62]++;
        patterns.push({
          id: `content-${Date.now()}`,
          type: 'content-similarity',
          name: 'Content Keyword Pattern',
          description: `Common keywords: ${contentKey}`,
          fragmentSignature: keywordArray,
          contextSignature: this.generateContextSignature(fragments),
          confidence: Math.min(this.patternUsage.get(contentKey) / 8, 1),
          usage: this.patternUsage.get(contentKey),
          lastUsed: Date.now(),
          created: Date.now()
        });
      } else
      /* istanbul ignore next */
      {
        cov_18qgtka0l9().b[17][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_18qgtka0l9().b[16][1]++;
    }
    cov_18qgtka0l9().s[63]++;
    return patterns;
  }
  generateAssemblySignature(fragments) {
    /* istanbul ignore next */
    cov_18qgtka0l9().f[15]++;
    const types =
    /* istanbul ignore next */
    (cov_18qgtka0l9().s[64]++, fragments.map(f => {
      /* istanbul ignore next */
      cov_18qgtka0l9().f[16]++;
      cov_18qgtka0l9().s[65]++;
      return f.type;
    }).sort());
    const priorities =
    /* istanbul ignore next */
    (cov_18qgtka0l9().s[66]++, fragments.map(f => {
      /* istanbul ignore next */
      cov_18qgtka0l9().f[17]++;
      cov_18qgtka0l9().s[67]++;
      return f.priority;
    }).sort());
    /* istanbul ignore next */
    cov_18qgtka0l9().s[68]++;
    return `${types.join(',')}|${priorities.join(',')}`;
  }
  generatePatternKey(fragment) {
    /* istanbul ignore next */
    cov_18qgtka0l9().f[18]++;
    cov_18qgtka0l9().s[69]++;
    return `${fragment.type}-${fragment.priority}`;
  }
  generateContextSignature(fragments) {
    /* istanbul ignore next */
    cov_18qgtka0l9().f[19]++;
    cov_18qgtka0l9().s[70]++;
    return fragments.map(f => {
      /* istanbul ignore next */
      cov_18qgtka0l9().f[20]++;
      cov_18qgtka0l9().s[71]++;
      return `${f.type}:${f.priority}:${f.tokenEstimate}`;
    }).join('|');
  }
  calculateSimilarity(fragments1, signature) {
    /* istanbul ignore next */
    cov_18qgtka0l9().f[21]++;
    const types1 =
    /* istanbul ignore next */
    (cov_18qgtka0l9().s[72]++, fragments1.map(f => {
      /* istanbul ignore next */
      cov_18qgtka0l9().f[22]++;
      cov_18qgtka0l9().s[73]++;
      return f.type;
    }));
    const types2 =
    /* istanbul ignore next */
    (cov_18qgtka0l9().s[74]++, Array.isArray(signature) ?
    /* istanbul ignore next */
    (cov_18qgtka0l9().b[19][0]++, signature) :
    /* istanbul ignore next */
    (cov_18qgtka0l9().b[19][1]++, []));
    /* istanbul ignore next */
    cov_18qgtka0l9().s[75]++;
    if (
    /* istanbul ignore next */
    (cov_18qgtka0l9().b[21][0]++, types1.length === 0) ||
    /* istanbul ignore next */
    (cov_18qgtka0l9().b[21][1]++, types2.length === 0)) {
      /* istanbul ignore next */
      cov_18qgtka0l9().b[20][0]++;
      cov_18qgtka0l9().s[76]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_18qgtka0l9().b[20][1]++;
    }
    const intersection =
    /* istanbul ignore next */
    (cov_18qgtka0l9().s[77]++, types1.filter(t => {
      /* istanbul ignore next */
      cov_18qgtka0l9().f[23]++;
      cov_18qgtka0l9().s[78]++;
      return types2.includes(t);
    }));
    const union =
    /* istanbul ignore next */
    (cov_18qgtka0l9().s[79]++, [...new Set([...types1, ...types2])]);
    /* istanbul ignore next */
    cov_18qgtka0l9().s[80]++;
    return intersection.length / union.length;
  }
  calculateConfidence(patterns) {
    /* istanbul ignore next */
    cov_18qgtka0l9().f[24]++;
    cov_18qgtka0l9().s[81]++;
    if (patterns.length === 0) {
      /* istanbul ignore next */
      cov_18qgtka0l9().b[22][0]++;
      cov_18qgtka0l9().s[82]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_18qgtka0l9().b[22][1]++;
    }
    const avgConfidence =
    /* istanbul ignore next */
    (cov_18qgtka0l9().s[83]++, patterns.reduce((sum, p) => {
      /* istanbul ignore next */
      cov_18qgtka0l9().f[25]++;
      cov_18qgtka0l9().s[84]++;
      return sum + p.confidence;
    }, 0) / patterns.length);
    const usageWeight =
    /* istanbul ignore next */
    (cov_18qgtka0l9().s[85]++, Math.min(patterns.length / 5, 1));
    /* istanbul ignore next */
    cov_18qgtka0l9().s[86]++;
    return avgConfidence * usageWeight;
  }
  generateRecommendations(patterns) {
    /* istanbul ignore next */
    cov_18qgtka0l9().f[26]++;
    const recommendations =
    /* istanbul ignore next */
    (cov_18qgtka0l9().s[87]++, []);
    /* istanbul ignore next */
    cov_18qgtka0l9().s[88]++;
    patterns.forEach(pattern => {
      /* istanbul ignore next */
      cov_18qgtka0l9().f[27]++;
      cov_18qgtka0l9().s[89]++;
      switch (pattern.type) {
        case 'sequence':
          /* istanbul ignore next */
          cov_18qgtka0l9().b[23][0]++;
          cov_18qgtka0l9().s[90]++;
          recommendations.push(`Consider using the proven sequence: ${pattern.description}`);
          /* istanbul ignore next */
          cov_18qgtka0l9().s[91]++;
          break;
        case 'priority-distribution':
          /* istanbul ignore next */
          cov_18qgtka0l9().b[23][1]++;
          cov_18qgtka0l9().s[92]++;
          recommendations.push(`Optimal priority distribution found: ${pattern.description}`);
          /* istanbul ignore next */
          cov_18qgtka0l9().s[93]++;
          break;
        case 'content-similarity':
          /* istanbul ignore next */
          cov_18qgtka0l9().b[23][2]++;
          cov_18qgtka0l9().s[94]++;
          recommendations.push(`Similar content patterns suggest: ${pattern.description}`);
          /* istanbul ignore next */
          cov_18qgtka0l9().s[95]++;
          break;
      }
    });
    /* istanbul ignore next */
    cov_18qgtka0l9().s[96]++;
    return recommendations;
  }
  updatePattern(signature, fragments, result) {
    /* istanbul ignore next */
    cov_18qgtka0l9().f[28]++;
    const existing =
    /* istanbul ignore next */
    (cov_18qgtka0l9().s[97]++, this.patterns.get(signature));
    /* istanbul ignore next */
    cov_18qgtka0l9().s[98]++;
    if (existing) {
      /* istanbul ignore next */
      cov_18qgtka0l9().b[24][0]++;
      cov_18qgtka0l9().s[99]++;
      existing.usage++;
      /* istanbul ignore next */
      cov_18qgtka0l9().s[100]++;
      existing.lastUsed = Date.now();
      /* istanbul ignore next */
      cov_18qgtka0l9().s[101]++;
      existing.confidence = Math.min(existing.confidence + 0.1, 1);
    } else {
      /* istanbul ignore next */
      cov_18qgtka0l9().b[24][1]++;
      const newPattern =
      /* istanbul ignore next */
      (cov_18qgtka0l9().s[102]++, {
        id: `pattern-${Date.now()}`,
        type: 'assembly',
        name: 'Assembly Pattern',
        description: `Pattern for ${fragments.length} fragments`,
        fragmentSignature: fragments.map(f => {
          /* istanbul ignore next */
          cov_18qgtka0l9().f[29]++;
          cov_18qgtka0l9().s[103]++;
          return f.type;
        }),
        contextSignature: signature,
        confidence: 0.5,
        usage: 1,
        lastUsed: Date.now(),
        created: Date.now()
      });
      /* istanbul ignore next */
      cov_18qgtka0l9().s[104]++;
      this.patterns.set(signature, newPattern);
    }
    // Cleanup old patterns if needed
    /* istanbul ignore next */
    cov_18qgtka0l9().s[105]++;
    if (this.patterns.size > this.config.maxPatterns) {
      /* istanbul ignore next */
      cov_18qgtka0l9().b[25][0]++;
      cov_18qgtka0l9().s[106]++;
      this.cleanupOldPatterns();
    } else
    /* istanbul ignore next */
    {
      cov_18qgtka0l9().b[25][1]++;
    }
  }
  cleanupOldPatterns() {
    /* istanbul ignore next */
    cov_18qgtka0l9().f[30]++;
    const sortedPatterns =
    /* istanbul ignore next */
    (cov_18qgtka0l9().s[107]++, Array.from(this.patterns.entries()).sort(([, a], [, b]) => {
      /* istanbul ignore next */
      cov_18qgtka0l9().f[31]++;
      cov_18qgtka0l9().s[108]++;
      return a.lastUsed - b.lastUsed;
    }));
    const toRemove =
    /* istanbul ignore next */
    (cov_18qgtka0l9().s[109]++, sortedPatterns.slice(0, Math.floor(this.config.maxPatterns * 0.1)));
    /* istanbul ignore next */
    cov_18qgtka0l9().s[110]++;
    toRemove.forEach(([key]) => {
      /* istanbul ignore next */
      cov_18qgtka0l9().f[32]++;
      cov_18qgtka0l9().s[111]++;
      return this.patterns.delete(key);
    });
  }
}
/* istanbul ignore next */
cov_18qgtka0l9().s[112]++;
exports.PatternRecognitionEngine = PatternRecognitionEngine;
/**
 * Context Memory Manager
 * Central hub for storing and retrieving context memory
 */
class ContextMemoryManager {
  constructor(config =
  /* istanbul ignore next */
  (cov_18qgtka0l9().b[26][0]++, {})) {
    /* istanbul ignore next */
    cov_18qgtka0l9().f[33]++;
    cov_18qgtka0l9().s[113]++;
    this.config = {
      maxPatterns:
      /* istanbul ignore next */
      (cov_18qgtka0l9().b[27][0]++, config.maxPatterns) ||
      /* istanbul ignore next */
      (cov_18qgtka0l9().b[27][1]++, 500),
      maxDecisions:
      /* istanbul ignore next */
      (cov_18qgtka0l9().b[28][0]++, config.maxDecisions) ||
      /* istanbul ignore next */
      (cov_18qgtka0l9().b[28][1]++, 1000),
      learningThreshold:
      /* istanbul ignore next */
      (cov_18qgtka0l9().b[29][0]++, config.learningThreshold) ||
      /* istanbul ignore next */
      (cov_18qgtka0l9().b[29][1]++, 3),
      decayRate:
      /* istanbul ignore next */
      (cov_18qgtka0l9().b[30][0]++, config.decayRate) ||
      /* istanbul ignore next */
      (cov_18qgtka0l9().b[30][1]++, 0.1),
      persistenceInterval:
      /* istanbul ignore next */
      (cov_18qgtka0l9().b[31][0]++, config.persistenceInterval) ||
      /* istanbul ignore next */
      (cov_18qgtka0l9().b[31][1]++, 300000),
      adaptiveWeights:
      /* istanbul ignore next */
      (cov_18qgtka0l9().b[32][0]++, config.adaptiveWeights) ||
      /* istanbul ignore next */
      (cov_18qgtka0l9().b[32][1]++, true)
    };
    /* istanbul ignore next */
    cov_18qgtka0l9().s[114]++;
    this.patternEngine = new PatternRecognitionEngine(this.config);
    /* istanbul ignore next */
    cov_18qgtka0l9().s[115]++;
    this.decisionHistory = new Map();
    /* istanbul ignore next */
    cov_18qgtka0l9().s[116]++;
    this.memoryCache = new Map();
    /* istanbul ignore next */
    cov_18qgtka0l9().s[117]++;
    this.learningMetrics = {
      patternsLearned: 0,
      decisionsRecorded: 0,
      recommendationsGenerated: 0,
      accuracyRate: 0,
      lastUpdated: Date.now()
    };
  }
  /**
   * Record a context decision for learning
   */
  recordDecision(contextId, decision, reasoning, outcome, fragments) {
    /* istanbul ignore next */
    cov_18qgtka0l9().f[34]++;
    const contextDecision =
    /* istanbul ignore next */
    (cov_18qgtka0l9().s[118]++, {
      id: `decision-${Date.now()}`,
      contextId,
      decision,
      reasoning,
      outcome,
      contextSignature: this.generateDecisionSignature(fragments),
      confidence: outcome === 'success' ?
      /* istanbul ignore next */
      (cov_18qgtka0l9().b[33][0]++, 1) :
      /* istanbul ignore next */
      (cov_18qgtka0l9().b[33][1]++, outcome === 'partial' ?
      /* istanbul ignore next */
      (cov_18qgtka0l9().b[34][0]++, 0.5) :
      /* istanbul ignore next */
      (cov_18qgtka0l9().b[34][1]++, 0.2)),
      timestamp: Date.now()
    });
    /* istanbul ignore next */
    cov_18qgtka0l9().s[119]++;
    this.decisionHistory.set(contextDecision.id, contextDecision);
    /* istanbul ignore next */
    cov_18qgtka0l9().s[120]++;
    this.learningMetrics.decisionsRecorded++;
    // Learn from the decision
    /* istanbul ignore next */
    cov_18qgtka0l9().s[121]++;
    this.patternEngine.learnFromAssembly(fragments, {
      decision,
      outcome
    }, outcome === 'success' ?
    /* istanbul ignore next */
    (cov_18qgtka0l9().b[35][0]++, 'positive') :
    /* istanbul ignore next */
    (cov_18qgtka0l9().b[35][1]++, outcome === 'failure' ?
    /* istanbul ignore next */
    (cov_18qgtka0l9().b[36][0]++, 'negative') :
    /* istanbul ignore next */
    (cov_18qgtka0l9().b[36][1]++, 'neutral')));
  }
  /**
   * Get recommendations based on similar contexts
   */
  getRecommendations(fragments) {
    /* istanbul ignore next */
    cov_18qgtka0l9().f[35]++;
    const recommendations =
    /* istanbul ignore next */
    (cov_18qgtka0l9().s[122]++, this.patternEngine.getRecommendations(fragments));
    /* istanbul ignore next */
    cov_18qgtka0l9().s[123]++;
    this.learningMetrics.recommendationsGenerated++;
    /* istanbul ignore next */
    cov_18qgtka0l9().s[124]++;
    return recommendations;
  }
  /**
   * Analyze current context for patterns
   */
  analyzeContext(fragments) {
    /* istanbul ignore next */
    cov_18qgtka0l9().f[36]++;
    cov_18qgtka0l9().s[125]++;
    return this.patternEngine.analyzeFragments(fragments);
  }
  /**
   * Store memory entry
   */
  storeMemory(key, content, type, priority =
  /* istanbul ignore next */
  (cov_18qgtka0l9().b[37][0]++, context_types_1.ContextPriority.MEDIUM)) {
    /* istanbul ignore next */
    cov_18qgtka0l9().f[37]++;
    const memoryEntry =
    /* istanbul ignore next */
    (cov_18qgtka0l9().s[126]++, {
      id: `memory-${Date.now()}`,
      key,
      content,
      type,
      priority,
      accessCount: 0,
      created: Date.now(),
      lastAccessed: Date.now()
    });
    /* istanbul ignore next */
    cov_18qgtka0l9().s[127]++;
    this.memoryCache.set(key, memoryEntry);
  }
  /**
   * Retrieve memory entry
   */
  getMemory(key) {
    /* istanbul ignore next */
    cov_18qgtka0l9().f[38]++;
    const entry =
    /* istanbul ignore next */
    (cov_18qgtka0l9().s[128]++, this.memoryCache.get(key));
    /* istanbul ignore next */
    cov_18qgtka0l9().s[129]++;
    if (entry) {
      /* istanbul ignore next */
      cov_18qgtka0l9().b[38][0]++;
      cov_18qgtka0l9().s[130]++;
      entry.accessCount++;
      /* istanbul ignore next */
      cov_18qgtka0l9().s[131]++;
      entry.lastAccessed = Date.now();
    } else
    /* istanbul ignore next */
    {
      cov_18qgtka0l9().b[38][1]++;
    }
    cov_18qgtka0l9().s[132]++;
    return /* istanbul ignore next */(cov_18qgtka0l9().b[39][0]++, entry) ||
    /* istanbul ignore next */
    (cov_18qgtka0l9().b[39][1]++, null);
  }
  /**
   * Get learning metrics
   */
  getLearningMetrics() {
    /* istanbul ignore next */
    cov_18qgtka0l9().f[39]++;
    cov_18qgtka0l9().s[133]++;
    // Update accuracy rate based on recent decisions
    this.updateAccuracyRate();
    /* istanbul ignore next */
    cov_18qgtka0l9().s[134]++;
    return {
      ...this.learningMetrics
    };
  }
  /**
   * Export memory state
   */
  exportMemory() {
    /* istanbul ignore next */
    cov_18qgtka0l9().f[40]++;
    cov_18qgtka0l9().s[135]++;
    return {
      config: this.config,
      patterns: this.patternEngine['patterns'],
      patternUsage: this.patternEngine['patternUsage'],
      decisions: Array.from(this.decisionHistory.entries()),
      memory: Array.from(this.memoryCache.entries()),
      metrics: this.learningMetrics,
      timestamp: Date.now()
    };
  }
  /**
   * Import memory state
   */
  importMemory(data) {
    /* istanbul ignore next */
    cov_18qgtka0l9().f[41]++;
    cov_18qgtka0l9().s[136]++;
    this.config = data.config;
    /* istanbul ignore next */
    cov_18qgtka0l9().s[137]++;
    this.patternEngine['patterns'] = data.patterns;
    /* istanbul ignore next */
    cov_18qgtka0l9().s[138]++;
    this.patternEngine['patternUsage'] = data.patternUsage;
    /* istanbul ignore next */
    cov_18qgtka0l9().s[139]++;
    this.decisionHistory = new Map(data.decisions);
    /* istanbul ignore next */
    cov_18qgtka0l9().s[140]++;
    this.memoryCache = new Map(data.memory);
    /* istanbul ignore next */
    cov_18qgtka0l9().s[141]++;
    this.learningMetrics = data.metrics;
  }
  // Private helper methods
  generateDecisionSignature(fragments) {
    /* istanbul ignore next */
    cov_18qgtka0l9().f[42]++;
    cov_18qgtka0l9().s[142]++;
    return fragments.map(f => {
      /* istanbul ignore next */
      cov_18qgtka0l9().f[43]++;
      cov_18qgtka0l9().s[143]++;
      return `${f.type}:${f.priority}`;
    }).sort().join('|');
  }
  updateAccuracyRate() {
    /* istanbul ignore next */
    cov_18qgtka0l9().f[44]++;
    const recentDecisions =
    /* istanbul ignore next */
    (cov_18qgtka0l9().s[144]++, Array.from(this.decisionHistory.values()));
    /* istanbul ignore next */
    cov_18qgtka0l9().s[145]++;
    if (recentDecisions.length === 0) {
      /* istanbul ignore next */
      cov_18qgtka0l9().b[40][0]++;
      cov_18qgtka0l9().s[146]++;
      this.learningMetrics.accuracyRate = 0;
      /* istanbul ignore next */
      cov_18qgtka0l9().s[147]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_18qgtka0l9().b[40][1]++;
    }
    const successCount =
    /* istanbul ignore next */
    (cov_18qgtka0l9().s[148]++, recentDecisions.filter(d => {
      /* istanbul ignore next */
      cov_18qgtka0l9().f[45]++;
      cov_18qgtka0l9().s[149]++;
      return d.outcome === 'success';
    }).length);
    /* istanbul ignore next */
    cov_18qgtka0l9().s[150]++;
    this.learningMetrics.accuracyRate = successCount / recentDecisions.length * 100;
    /* istanbul ignore next */
    cov_18qgtka0l9().s[151]++;
    this.learningMetrics.lastUpdated = Date.now();
  }
}
/* istanbul ignore next */
cov_18qgtka0l9().s[152]++;
exports.ContextMemoryManager = ContextMemoryManager;
/**
 * Singleton instance for context memory management
 */
/* istanbul ignore next */
cov_18qgtka0l9().s[153]++;
exports.contextMemoryManager = new ContextMemoryManager();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,