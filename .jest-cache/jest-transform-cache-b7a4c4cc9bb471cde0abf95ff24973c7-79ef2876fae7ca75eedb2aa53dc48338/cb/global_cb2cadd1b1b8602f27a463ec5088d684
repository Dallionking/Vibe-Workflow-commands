b602fbdc335074f179d38b8a2fda40ca
"use strict";

/**
 * L1: Global Context Layer Implementation
 * Always active context that provides system-wide rules and configuration
 */
/* istanbul ignore next */
function cov_2h6np5v0lt() {
  var path = "/Users/dallionking/Vibe Projects/Vibe Workflow commands /context/layers/global.ts";
  var hash = "938917c914b26d52c5e5db5e525586ddd7cc360b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dallionking/Vibe Projects/Vibe Workflow commands /context/layers/global.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 62
        }
      },
      "1": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 69
        }
      },
      "2": {
        start: {
          line: 8,
          column: 24
        },
        end: {
          line: 8,
          column: 57
        }
      },
      "3": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 34
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 57,
          column: 10
        }
      },
      "5": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 123,
          column: 10
        }
      },
      "6": {
        start: {
          line: 129,
          column: 26
        },
        end: {
          line: 129,
          column: 48
        }
      },
      "7": {
        start: {
          line: 130,
          column: 26
        },
        end: {
          line: 130,
          column: 36
        }
      },
      "8": {
        start: {
          line: 131,
          column: 27
        },
        end: {
          line: 136,
          column: 9
        }
      },
      "9": {
        start: {
          line: 132,
          column: 55
        },
        end: {
          line: 132,
          column: 64
        }
      },
      "10": {
        start: {
          line: 137,
          column: 25
        },
        end: {
          line: 144,
          column: 9
        }
      },
      "11": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 155,
          column: 10
        }
      },
      "12": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 34
        }
      },
      "13": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 34
        }
      },
      "14": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 170,
          column: 9
        }
      },
      "15": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 169,
          column: 88
        }
      },
      "16": {
        start: {
          line: 171,
          column: 26
        },
        end: {
          line: 171,
          column: 36
        }
      },
      "17": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 176,
          column: 10
        }
      },
      "18": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 180,
          column: 9
        }
      },
      "19": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 179,
          column: 48
        }
      },
      "20": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 187,
          column: 9
        }
      },
      "21": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 186,
          column: 14
        }
      },
      "22": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 61
        }
      },
      "23": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 34
        }
      },
      "24": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 198,
          column: 9
        }
      },
      "25": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 197,
          column: 62
        }
      },
      "26": {
        start: {
          line: 199,
          column: 30
        },
        end: {
          line: 199,
          column: 87
        }
      },
      "27": {
        start: {
          line: 199,
          column: 70
        },
        end: {
          line: 199,
          column: 86
        }
      },
      "28": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 205,
          column: 9
        }
      },
      "29": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 201,
          column: 59
        }
      },
      "30": {
        start: {
          line: 204,
          column: 12
        },
        end: {
          line: 204,
          column: 48
        }
      },
      "31": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 206,
          column: 62
        }
      },
      "32": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 214,
          column: 9
        }
      },
      "33": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 213,
          column: 62
        }
      },
      "34": {
        start: {
          line: 215,
          column: 30
        },
        end: {
          line: 215,
          column: 61
        }
      },
      "35": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 216,
          column: 89
        }
      },
      "36": {
        start: {
          line: 216,
          column: 72
        },
        end: {
          line: 216,
          column: 87
        }
      },
      "37": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 220,
          column: 9
        }
      },
      "38": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 218,
          column: 66
        }
      },
      "39": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 219,
          column: 24
        }
      },
      "40": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 221,
          column: 21
        }
      },
      "41": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 229,
          column: 9
        }
      },
      "42": {
        start: {
          line: 228,
          column: 12
        },
        end: {
          line: 228,
          column: 22
        }
      },
      "43": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 232,
          column: 53
        }
      },
      "44": {
        start: {
          line: 231,
          column: 28
        },
        end: {
          line: 231,
          column: 40
        }
      },
      "45": {
        start: {
          line: 232,
          column: 28
        },
        end: {
          line: 232,
          column: 51
        }
      },
      "46": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 238,
          column: 69
        }
      },
      "47": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 244,
          column: 37
        }
      },
      "48": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 254,
          column: 10
        }
      },
      "49": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 261,
          column: 10
        }
      },
      "50": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 281,
          column: 10
        }
      },
      "51": {
        start: {
          line: 284,
          column: 8
        },
        end: {
          line: 309,
          column: 10
        }
      },
      "52": {
        start: {
          line: 312,
          column: 0
        },
        end: {
          line: 312,
          column: 52
        }
      },
      "53": {
        start: {
          line: 316,
          column: 0
        },
        end: {
          line: 316,
          column: 58
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        loc: {
          start: {
            line: 14,
            column: 18
          },
          end: {
            line: 124,
            column: 5
          }
        },
        line: 14
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 128,
            column: 4
          },
          end: {
            line: 128,
            column: 5
          }
        },
        loc: {
          start: {
            line: 128,
            column: 74
          },
          end: {
            line: 157,
            column: 5
          }
        },
        line: 128
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 132,
            column: 47
          },
          end: {
            line: 132,
            column: 48
          }
        },
        loc: {
          start: {
            line: 132,
            column: 55
          },
          end: {
            line: 132,
            column: 64
          }
        },
        line: 132
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 161,
            column: 4
          },
          end: {
            line: 161,
            column: 5
          }
        },
        loc: {
          start: {
            line: 161,
            column: 17
          },
          end: {
            line: 163,
            column: 5
          }
        },
        line: 161
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 167,
            column: 4
          },
          end: {
            line: 167,
            column: 5
          }
        },
        loc: {
          start: {
            line: 167,
            column: 58
          },
          end: {
            line: 191,
            column: 5
          }
        },
        line: 167
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 195,
            column: 4
          },
          end: {
            line: 195,
            column: 5
          }
        },
        loc: {
          start: {
            line: 195,
            column: 18
          },
          end: {
            line: 207,
            column: 5
          }
        },
        line: 195
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 199,
            column: 65
          },
          end: {
            line: 199,
            column: 66
          }
        },
        loc: {
          start: {
            line: 199,
            column: 70
          },
          end: {
            line: 199,
            column: 86
          }
        },
        line: 199
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 211,
            column: 4
          },
          end: {
            line: 211,
            column: 5
          }
        },
        loc: {
          start: {
            line: 211,
            column: 23
          },
          end: {
            line: 222,
            column: 5
          }
        },
        line: 211
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 216,
            column: 67
          },
          end: {
            line: 216,
            column: 68
          }
        },
        loc: {
          start: {
            line: 216,
            column: 72
          },
          end: {
            line: 216,
            column: 87
          }
        },
        line: 216
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 226,
            column: 4
          },
          end: {
            line: 226,
            column: 5
          }
        },
        loc: {
          start: {
            line: 226,
            column: 22
          },
          end: {
            line: 233,
            column: 5
          }
        },
        line: 226
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 231,
            column: 20
          },
          end: {
            line: 231,
            column: 21
          }
        },
        loc: {
          start: {
            line: 231,
            column: 28
          },
          end: {
            line: 231,
            column: 40
          }
        },
        line: 231
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 232,
            column: 18
          },
          end: {
            line: 232,
            column: 19
          }
        },
        loc: {
          start: {
            line: 232,
            column: 28
          },
          end: {
            line: 232,
            column: 51
          }
        },
        line: 232
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 237,
            column: 4
          },
          end: {
            line: 237,
            column: 5
          }
        },
        loc: {
          start: {
            line: 237,
            column: 20
          },
          end: {
            line: 239,
            column: 5
          }
        },
        line: 237
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 243,
            column: 4
          },
          end: {
            line: 243,
            column: 5
          }
        },
        loc: {
          start: {
            line: 243,
            column: 27
          },
          end: {
            line: 245,
            column: 5
          }
        },
        line: 243
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 247,
            column: 4
          },
          end: {
            line: 247,
            column: 5
          }
        },
        loc: {
          start: {
            line: 247,
            column: 28
          },
          end: {
            line: 255,
            column: 5
          }
        },
        line: 247
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 256,
            column: 4
          },
          end: {
            line: 256,
            column: 5
          }
        },
        loc: {
          start: {
            line: 256,
            column: 28
          },
          end: {
            line: 262,
            column: 5
          }
        },
        line: 256
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 263,
            column: 4
          },
          end: {
            line: 263,
            column: 5
          }
        },
        loc: {
          start: {
            line: 263,
            column: 32
          },
          end: {
            line: 282,
            column: 5
          }
        },
        line: 263
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 283,
            column: 4
          },
          end: {
            line: 283,
            column: 5
          }
        },
        loc: {
          start: {
            line: 283,
            column: 30
          },
          end: {
            line: 310,
            column: 5
          }
        },
        line: 283
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 133,
            column: 25
          },
          end: {
            line: 133,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 133,
            column: 25
          },
          end: {
            line: 133,
            column: 36
          }
        }, {
          start: {
            line: 133,
            column: 40
          },
          end: {
            line: 133,
            column: 68
          }
        }],
        line: 133
      },
      "1": {
        loc: {
          start: {
            line: 134,
            column: 25
          },
          end: {
            line: 134,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 134,
            column: 25
          },
          end: {
            line: 134,
            column: 36
          }
        }, {
          start: {
            line: 134,
            column: 40
          },
          end: {
            line: 134,
            column: 68
          }
        }],
        line: 134
      },
      "2": {
        loc: {
          start: {
            line: 152,
            column: 19
          },
          end: {
            line: 152,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 152,
            column: 19
          },
          end: {
            line: 152,
            column: 30
          }
        }, {
          start: {
            line: 152,
            column: 34
          },
          end: {
            line: 152,
            column: 51
          }
        }],
        line: 152
      },
      "3": {
        loc: {
          start: {
            line: 154,
            column: 25
          },
          end: {
            line: 154,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 154,
            column: 25
          },
          end: {
            line: 154,
            column: 49
          }
        }, {
          start: {
            line: 154,
            column: 53
          },
          end: {
            line: 154,
            column: 85
          }
        }],
        line: 154
      },
      "4": {
        loc: {
          start: {
            line: 168,
            column: 8
          },
          end: {
            line: 170,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 8
          },
          end: {
            line: 170,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 168
      },
      "5": {
        loc: {
          start: {
            line: 178,
            column: 8
          },
          end: {
            line: 180,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 178,
            column: 8
          },
          end: {
            line: 180,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 178
      },
      "6": {
        loc: {
          start: {
            line: 182,
            column: 8
          },
          end: {
            line: 187,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 182,
            column: 8
          },
          end: {
            line: 187,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 182
      },
      "7": {
        loc: {
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 198,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 198,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 196
      },
      "8": {
        loc: {
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 205,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 205,
            column: 9
          }
        }, {
          start: {
            line: 203,
            column: 13
          },
          end: {
            line: 205,
            column: 9
          }
        }],
        line: 200
      },
      "9": {
        loc: {
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 214,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 214,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 212
      },
      "10": {
        loc: {
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 220,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 220,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 217
      },
      "11": {
        loc: {
          start: {
            line: 227,
            column: 8
          },
          end: {
            line: 229,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 227,
            column: 8
          },
          end: {
            line: 229,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 227
      },
      "12": {
        loc: {
          start: {
            line: 238,
            column: 15
          },
          end: {
            line: 238,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 238,
            column: 36
          },
          end: {
            line: 238,
            column: 61
          }
        }, {
          start: {
            line: 238,
            column: 64
          },
          end: {
            line: 238,
            column: 68
          }
        }],
        line: 238
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dallionking/Vibe Projects/Vibe Workflow commands /context/layers/global.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dallionking/Vibe Projects/Vibe Workflow commands /context/layers/global.ts"],
      sourcesContent: ["/**\n * L1: Global Context Layer Implementation\n * Always active context that provides system-wide rules and configuration\n */\n\nimport {\n  GlobalContextLayer,\n  GlobalContextData,\n  GlobalRule,\n  GlobalConfiguration,\n  UserPreferences,\n  ContextPriority,\n  ProjectInfo,\n  UserProfile,\n  ToolConfiguration,\n  MCPToolConfig,\n  QualityStandard,\n  DevelopmentPattern,\n  ContextMetadata\n} from '../types/context.types';\n\n/**\n * Global Context Manager\n * Manages L1 context that is always active across all phases and tasks\n */\nexport class GlobalContextManager {\n  private globalContext: GlobalContextLayer | null = null;\n  private readonly defaultRules: GlobalRule[] = [\n    {\n      id: 'systematic-development',\n      name: 'Systematic Development',\n      description: 'Follow the 10-step Vibe Coding methodology exactly',\n      rule: 'Always follow systematic development patterns with proper validation',\n      enabled: true,\n      priority: ContextPriority.CRITICAL\n    },\n    {\n      id: 'quality-standards',\n      name: 'Quality Standards',\n      description: 'Enforce 95%+ test coverage and Universal Format compliance',\n      rule: 'Maintain 95%+ test coverage and follow Universal Format for all code',\n      enabled: true,\n      priority: ContextPriority.CRITICAL\n    },\n    {\n      id: 'context-preservation',\n      name: 'Context Preservation',\n      description: 'Maintain project state across all steps',\n      rule: 'Always preserve and enhance context between operations',\n      enabled: true,\n      priority: ContextPriority.HIGH\n    },\n    {\n      id: 'mcp-integration',\n      name: 'MCP Integration',\n      description: 'Leverage Context7, Perplexity, and other tools systematically',\n      rule: 'Use MCP tools in priority order: Context7 \u2192 Perplexity \u2192 Sequential Thinking \u2192 GitHub',\n      enabled: true,\n      priority: ContextPriority.HIGH\n    },\n    {\n      id: 'professional-output',\n      name: 'Professional Output',\n      description: 'Generate enterprise-ready documentation automatically',\n      rule: 'All outputs must meet enterprise standards with comprehensive documentation',\n      enabled: true,\n      priority: ContextPriority.MEDIUM\n    }\n  ];\n\n  private readonly defaultConfiguration: GlobalConfiguration = {\n    mcpTools: [\n      {\n        name: 'Context7',\n        enabled: true,\n        priority: ContextPriority.CRITICAL,\n        configuration: { timeout: 30000, maxRetries: 3 }\n      },\n      {\n        name: 'Perplexity',\n        enabled: true,\n        priority: ContextPriority.HIGH,\n        configuration: { timeout: 45000, maxQueries: 10 }\n      },\n      {\n        name: 'Sequential Thinking',\n        enabled: true,\n        priority: ContextPriority.HIGH,\n        configuration: { maxThoughts: 10, timeout: 60000 }\n      },\n      {\n        name: 'GitHub',\n        enabled: true,\n        priority: ContextPriority.MEDIUM,\n        configuration: { timeout: 30000, maxFiles: 100 }\n      }\n    ],\n    qualityStandards: [\n      {\n        name: 'Test Coverage',\n        description: 'Minimum test coverage requirement',\n        criteria: [\n          { metric: 'line-coverage', target: 95, required: true },\n          { metric: 'branch-coverage', target: 90, required: true },\n          { metric: 'function-coverage', target: 95, required: true }\n        ],\n        threshold: 95\n      },\n      {\n        name: 'Code Quality',\n        description: 'Code quality standards',\n        criteria: [\n          { metric: 'complexity', target: 10, required: true },\n          { metric: 'duplication', target: 5, required: true },\n          { metric: 'maintainability', target: 80, required: true }\n        ],\n        threshold: 80\n      }\n    ],\n    developmentPatterns: [\n      {\n        name: 'Universal Format',\n        description: 'Standard format for vertical slices',\n        pattern: 'feature \u2192 implementation \u2192 testing \u2192 documentation \u2192 integration',\n        examples: ['user-auth-slice.md', 'payment-processing-slice.md'],\n        applicability: ['all-features', 'vertical-slices']\n      },\n      {\n        name: 'MCP Integration',\n        description: 'Pattern for integrating MCP tools',\n        pattern: 'validate \u2192 research \u2192 implement \u2192 test \u2192 document',\n        examples: ['context7-research.ts', 'perplexity-validation.ts'],\n        applicability: ['research-tasks', 'validation-tasks']\n      }\n    ]\n  };\n\n  /**\n   * Initialize global context with default or provided configuration\n   */\n  public async initialize(\n    projectInfo?: ProjectInfo,\n    userProfile?: UserProfile,\n    customRules?: GlobalRule[],\n    customConfig?: Partial<GlobalConfiguration>\n  ): Promise<GlobalContextLayer> {\n    const contextId = `global-${Date.now()}`;\n    const timestamp = Date.now();\n\n    const globalData: GlobalContextData = {\n      systemRules: this.defaultRules.map(rule => rule.rule),\n      projectInfo: projectInfo || this.getDefaultProjectInfo(),\n      userProfile: userProfile || this.getDefaultUserProfile(),\n      toolConfigurations: this.buildToolConfigurations()\n    };\n\n    const metadata: ContextMetadata = {\n      source: { type: 'global', scope: 'system' },\n      priority: ContextPriority.CRITICAL,\n      tags: ['global', 'system', 'always-active'],\n      dependencies: [],\n      created: timestamp,\n      lastModified: timestamp\n    };\n\n    this.globalContext = {\n      id: contextId,\n      timestamp,\n      version: '1.0.0',\n      layer: 'global',\n      data: globalData,\n      metadata,\n      rules: customRules || this.defaultRules,\n      configuration: { ...this.defaultConfiguration, ...customConfig },\n      preferences: userProfile?.preferences || this.getDefaultUserPreferences()\n    };\n\n    return this.globalContext;\n  }\n\n  /**\n   * Get current global context\n   */\n  public getContext(): GlobalContextLayer | null {\n    return this.globalContext;\n  }\n\n  /**\n   * Update global context with new data\n   */\n  public async updateContext(\n    updates: Partial<GlobalContextData>,\n    newRules?: GlobalRule[],\n    configUpdates?: Partial<GlobalConfiguration>\n  ): Promise<GlobalContextLayer> {\n    if (!this.globalContext) {\n      throw new Error('Global context not initialized. Call initialize() first.');\n    }\n\n    const timestamp = Date.now();\n\n    // Update data\n    this.globalContext.data = {\n      ...this.globalContext.data,\n      ...updates\n    };\n\n    // Update rules if provided\n    if (newRules) {\n      this.globalContext.rules = newRules;\n    }\n\n    // Update configuration if provided\n    if (configUpdates) {\n      this.globalContext.configuration = {\n        ...this.globalContext.configuration,\n        ...configUpdates\n      };\n    }\n\n    // Update metadata\n    this.globalContext.metadata.lastModified = timestamp;\n\n    return this.globalContext;\n  }\n\n  /**\n   * Add or update a global rule\n   */\n  public addRule(rule: GlobalRule): void {\n    if (!this.globalContext) {\n      throw new Error('Global context not initialized');\n    }\n\n    const existingIndex = this.globalContext.rules.findIndex(r => r.id === rule.id);\n    if (existingIndex >= 0) {\n      this.globalContext.rules[existingIndex] = rule;\n    } else {\n      this.globalContext.rules.push(rule);\n    }\n\n    this.globalContext.metadata.lastModified = Date.now();\n  }\n\n  /**\n   * Remove a global rule\n   */\n  public removeRule(ruleId: string): boolean {\n    if (!this.globalContext) {\n      throw new Error('Global context not initialized');\n    }\n\n    const initialLength = this.globalContext.rules.length;\n    this.globalContext.rules = this.globalContext.rules.filter(r => r.id !== ruleId);\n    \n    if (this.globalContext.rules.length < initialLength) {\n      this.globalContext.metadata.lastModified = Date.now();\n      return true;\n    }\n    \n    return false;\n  }\n\n  /**\n   * Get enabled rules sorted by priority\n   */\n  public getEnabledRules(): GlobalRule[] {\n    if (!this.globalContext) {\n      return [];\n    }\n\n    return this.globalContext.rules\n      .filter(rule => rule.enabled)\n      .sort((a, b) => b.priority - a.priority);\n  }\n\n  /**\n   * Export global context for serialization\n   */\n  public exportContext(): GlobalContextLayer | null {\n    return this.globalContext ? { ...this.globalContext } : null;\n  }\n\n  /**\n   * Import global context from serialized data\n   */\n  public importContext(context: GlobalContextLayer): void {\n    this.globalContext = context;\n  }\n\n  // Private helper methods\n\n  private getDefaultProjectInfo(): ProjectInfo {\n    return {\n      name: 'Vibe Workflow Commands',\n      description: 'Advanced AI-assisted development workflow system',\n      type: 'library',\n      technologies: ['TypeScript', 'Node.js', 'Claude', 'MCP'],\n      architecture: 'modular-agent-system'\n    };\n  }\n\n  private getDefaultUserProfile(): UserProfile {\n    return {\n      preferences: this.getDefaultUserPreferences(),\n      experience: 'advanced',\n      focusAreas: ['ai-assistance', 'workflow-automation', 'code-quality']\n    };\n  }\n\n  private getDefaultUserPreferences(): UserPreferences {\n    return {\n      codeStyle: {\n        indentation: 'spaces',\n        spacing: 2,\n        lineLength: 100,\n        conventions: ['camelCase', 'PascalCase', 'kebab-case-files']\n      },\n      documentation: {\n        format: 'markdown',\n        detail: 'comprehensive',\n        examples: true\n      },\n      testing: {\n        framework: 'jest',\n        coverage: 95,\n        types: ['unit', 'integration', 'e2e']\n      }\n    };\n  }\n\n  private buildToolConfigurations(): ToolConfiguration[] {\n    return [\n      {\n        toolName: 'TodoWrite',\n        enabled: true,\n        priority: ContextPriority.HIGH,\n        settings: { autoTrack: true, maxTasks: 50 }\n      },\n      {\n        toolName: 'Bash',\n        enabled: true,\n        priority: ContextPriority.MEDIUM,\n        settings: { timeout: 120000, safeMode: true }\n      },\n      {\n        toolName: 'Read',\n        enabled: true,\n        priority: ContextPriority.MEDIUM,\n        settings: { maxFileSize: 1000000, encoding: 'utf-8' }\n      },\n      {\n        toolName: 'Write',\n        enabled: true,\n        priority: ContextPriority.MEDIUM,\n        settings: { backup: true, validateSyntax: true }\n      }\n    ];\n  }\n}\n\n/**\n * Singleton instance for global context management\n */\nexport const globalContextManager = new GlobalContextManager();"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "938917c914b26d52c5e5db5e525586ddd7cc360b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2h6np5v0lt = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2h6np5v0lt();
cov_2h6np5v0lt().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2h6np5v0lt().s[1]++;
exports.globalContextManager = exports.GlobalContextManager = void 0;
const context_types_1 =
/* istanbul ignore next */
(cov_2h6np5v0lt().s[2]++, require("../types/context.types"));
/**
 * Global Context Manager
 * Manages L1 context that is always active across all phases and tasks
 */
class GlobalContextManager {
  constructor() {
    /* istanbul ignore next */
    cov_2h6np5v0lt().f[0]++;
    cov_2h6np5v0lt().s[3]++;
    this.globalContext = null;
    /* istanbul ignore next */
    cov_2h6np5v0lt().s[4]++;
    this.defaultRules = [{
      id: 'systematic-development',
      name: 'Systematic Development',
      description: 'Follow the 10-step Vibe Coding methodology exactly',
      rule: 'Always follow systematic development patterns with proper validation',
      enabled: true,
      priority: context_types_1.ContextPriority.CRITICAL
    }, {
      id: 'quality-standards',
      name: 'Quality Standards',
      description: 'Enforce 95%+ test coverage and Universal Format compliance',
      rule: 'Maintain 95%+ test coverage and follow Universal Format for all code',
      enabled: true,
      priority: context_types_1.ContextPriority.CRITICAL
    }, {
      id: 'context-preservation',
      name: 'Context Preservation',
      description: 'Maintain project state across all steps',
      rule: 'Always preserve and enhance context between operations',
      enabled: true,
      priority: context_types_1.ContextPriority.HIGH
    }, {
      id: 'mcp-integration',
      name: 'MCP Integration',
      description: 'Leverage Context7, Perplexity, and other tools systematically',
      rule: 'Use MCP tools in priority order: Context7 → Perplexity → Sequential Thinking → GitHub',
      enabled: true,
      priority: context_types_1.ContextPriority.HIGH
    }, {
      id: 'professional-output',
      name: 'Professional Output',
      description: 'Generate enterprise-ready documentation automatically',
      rule: 'All outputs must meet enterprise standards with comprehensive documentation',
      enabled: true,
      priority: context_types_1.ContextPriority.MEDIUM
    }];
    /* istanbul ignore next */
    cov_2h6np5v0lt().s[5]++;
    this.defaultConfiguration = {
      mcpTools: [{
        name: 'Context7',
        enabled: true,
        priority: context_types_1.ContextPriority.CRITICAL,
        configuration: {
          timeout: 30000,
          maxRetries: 3
        }
      }, {
        name: 'Perplexity',
        enabled: true,
        priority: context_types_1.ContextPriority.HIGH,
        configuration: {
          timeout: 45000,
          maxQueries: 10
        }
      }, {
        name: 'Sequential Thinking',
        enabled: true,
        priority: context_types_1.ContextPriority.HIGH,
        configuration: {
          maxThoughts: 10,
          timeout: 60000
        }
      }, {
        name: 'GitHub',
        enabled: true,
        priority: context_types_1.ContextPriority.MEDIUM,
        configuration: {
          timeout: 30000,
          maxFiles: 100
        }
      }],
      qualityStandards: [{
        name: 'Test Coverage',
        description: 'Minimum test coverage requirement',
        criteria: [{
          metric: 'line-coverage',
          target: 95,
          required: true
        }, {
          metric: 'branch-coverage',
          target: 90,
          required: true
        }, {
          metric: 'function-coverage',
          target: 95,
          required: true
        }],
        threshold: 95
      }, {
        name: 'Code Quality',
        description: 'Code quality standards',
        criteria: [{
          metric: 'complexity',
          target: 10,
          required: true
        }, {
          metric: 'duplication',
          target: 5,
          required: true
        }, {
          metric: 'maintainability',
          target: 80,
          required: true
        }],
        threshold: 80
      }],
      developmentPatterns: [{
        name: 'Universal Format',
        description: 'Standard format for vertical slices',
        pattern: 'feature → implementation → testing → documentation → integration',
        examples: ['user-auth-slice.md', 'payment-processing-slice.md'],
        applicability: ['all-features', 'vertical-slices']
      }, {
        name: 'MCP Integration',
        description: 'Pattern for integrating MCP tools',
        pattern: 'validate → research → implement → test → document',
        examples: ['context7-research.ts', 'perplexity-validation.ts'],
        applicability: ['research-tasks', 'validation-tasks']
      }]
    };
  }
  /**
   * Initialize global context with default or provided configuration
   */
  async initialize(projectInfo, userProfile, customRules, customConfig) {
    /* istanbul ignore next */
    cov_2h6np5v0lt().f[1]++;
    const contextId =
    /* istanbul ignore next */
    (cov_2h6np5v0lt().s[6]++, `global-${Date.now()}`);
    const timestamp =
    /* istanbul ignore next */
    (cov_2h6np5v0lt().s[7]++, Date.now());
    const globalData =
    /* istanbul ignore next */
    (cov_2h6np5v0lt().s[8]++, {
      systemRules: this.defaultRules.map(rule => {
        /* istanbul ignore next */
        cov_2h6np5v0lt().f[2]++;
        cov_2h6np5v0lt().s[9]++;
        return rule.rule;
      }),
      projectInfo:
      /* istanbul ignore next */
      (cov_2h6np5v0lt().b[0][0]++, projectInfo) ||
      /* istanbul ignore next */
      (cov_2h6np5v0lt().b[0][1]++, this.getDefaultProjectInfo()),
      userProfile:
      /* istanbul ignore next */
      (cov_2h6np5v0lt().b[1][0]++, userProfile) ||
      /* istanbul ignore next */
      (cov_2h6np5v0lt().b[1][1]++, this.getDefaultUserProfile()),
      toolConfigurations: this.buildToolConfigurations()
    });
    const metadata =
    /* istanbul ignore next */
    (cov_2h6np5v0lt().s[10]++, {
      source: {
        type: 'global',
        scope: 'system'
      },
      priority: context_types_1.ContextPriority.CRITICAL,
      tags: ['global', 'system', 'always-active'],
      dependencies: [],
      created: timestamp,
      lastModified: timestamp
    });
    /* istanbul ignore next */
    cov_2h6np5v0lt().s[11]++;
    this.globalContext = {
      id: contextId,
      timestamp,
      version: '1.0.0',
      layer: 'global',
      data: globalData,
      metadata,
      rules:
      /* istanbul ignore next */
      (cov_2h6np5v0lt().b[2][0]++, customRules) ||
      /* istanbul ignore next */
      (cov_2h6np5v0lt().b[2][1]++, this.defaultRules),
      configuration: {
        ...this.defaultConfiguration,
        ...customConfig
      },
      preferences:
      /* istanbul ignore next */
      (cov_2h6np5v0lt().b[3][0]++, userProfile?.preferences) ||
      /* istanbul ignore next */
      (cov_2h6np5v0lt().b[3][1]++, this.getDefaultUserPreferences())
    };
    /* istanbul ignore next */
    cov_2h6np5v0lt().s[12]++;
    return this.globalContext;
  }
  /**
   * Get current global context
   */
  getContext() {
    /* istanbul ignore next */
    cov_2h6np5v0lt().f[3]++;
    cov_2h6np5v0lt().s[13]++;
    return this.globalContext;
  }
  /**
   * Update global context with new data
   */
  async updateContext(updates, newRules, configUpdates) {
    /* istanbul ignore next */
    cov_2h6np5v0lt().f[4]++;
    cov_2h6np5v0lt().s[14]++;
    if (!this.globalContext) {
      /* istanbul ignore next */
      cov_2h6np5v0lt().b[4][0]++;
      cov_2h6np5v0lt().s[15]++;
      throw new Error('Global context not initialized. Call initialize() first.');
    } else
    /* istanbul ignore next */
    {
      cov_2h6np5v0lt().b[4][1]++;
    }
    const timestamp =
    /* istanbul ignore next */
    (cov_2h6np5v0lt().s[16]++, Date.now());
    // Update data
    /* istanbul ignore next */
    cov_2h6np5v0lt().s[17]++;
    this.globalContext.data = {
      ...this.globalContext.data,
      ...updates
    };
    // Update rules if provided
    /* istanbul ignore next */
    cov_2h6np5v0lt().s[18]++;
    if (newRules) {
      /* istanbul ignore next */
      cov_2h6np5v0lt().b[5][0]++;
      cov_2h6np5v0lt().s[19]++;
      this.globalContext.rules = newRules;
    } else
    /* istanbul ignore next */
    {
      cov_2h6np5v0lt().b[5][1]++;
    }
    // Update configuration if provided
    cov_2h6np5v0lt().s[20]++;
    if (configUpdates) {
      /* istanbul ignore next */
      cov_2h6np5v0lt().b[6][0]++;
      cov_2h6np5v0lt().s[21]++;
      this.globalContext.configuration = {
        ...this.globalContext.configuration,
        ...configUpdates
      };
    } else
    /* istanbul ignore next */
    {
      cov_2h6np5v0lt().b[6][1]++;
    }
    // Update metadata
    cov_2h6np5v0lt().s[22]++;
    this.globalContext.metadata.lastModified = timestamp;
    /* istanbul ignore next */
    cov_2h6np5v0lt().s[23]++;
    return this.globalContext;
  }
  /**
   * Add or update a global rule
   */
  addRule(rule) {
    /* istanbul ignore next */
    cov_2h6np5v0lt().f[5]++;
    cov_2h6np5v0lt().s[24]++;
    if (!this.globalContext) {
      /* istanbul ignore next */
      cov_2h6np5v0lt().b[7][0]++;
      cov_2h6np5v0lt().s[25]++;
      throw new Error('Global context not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_2h6np5v0lt().b[7][1]++;
    }
    const existingIndex =
    /* istanbul ignore next */
    (cov_2h6np5v0lt().s[26]++, this.globalContext.rules.findIndex(r => {
      /* istanbul ignore next */
      cov_2h6np5v0lt().f[6]++;
      cov_2h6np5v0lt().s[27]++;
      return r.id === rule.id;
    }));
    /* istanbul ignore next */
    cov_2h6np5v0lt().s[28]++;
    if (existingIndex >= 0) {
      /* istanbul ignore next */
      cov_2h6np5v0lt().b[8][0]++;
      cov_2h6np5v0lt().s[29]++;
      this.globalContext.rules[existingIndex] = rule;
    } else {
      /* istanbul ignore next */
      cov_2h6np5v0lt().b[8][1]++;
      cov_2h6np5v0lt().s[30]++;
      this.globalContext.rules.push(rule);
    }
    /* istanbul ignore next */
    cov_2h6np5v0lt().s[31]++;
    this.globalContext.metadata.lastModified = Date.now();
  }
  /**
   * Remove a global rule
   */
  removeRule(ruleId) {
    /* istanbul ignore next */
    cov_2h6np5v0lt().f[7]++;
    cov_2h6np5v0lt().s[32]++;
    if (!this.globalContext) {
      /* istanbul ignore next */
      cov_2h6np5v0lt().b[9][0]++;
      cov_2h6np5v0lt().s[33]++;
      throw new Error('Global context not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_2h6np5v0lt().b[9][1]++;
    }
    const initialLength =
    /* istanbul ignore next */
    (cov_2h6np5v0lt().s[34]++, this.globalContext.rules.length);
    /* istanbul ignore next */
    cov_2h6np5v0lt().s[35]++;
    this.globalContext.rules = this.globalContext.rules.filter(r => {
      /* istanbul ignore next */
      cov_2h6np5v0lt().f[8]++;
      cov_2h6np5v0lt().s[36]++;
      return r.id !== ruleId;
    });
    /* istanbul ignore next */
    cov_2h6np5v0lt().s[37]++;
    if (this.globalContext.rules.length < initialLength) {
      /* istanbul ignore next */
      cov_2h6np5v0lt().b[10][0]++;
      cov_2h6np5v0lt().s[38]++;
      this.globalContext.metadata.lastModified = Date.now();
      /* istanbul ignore next */
      cov_2h6np5v0lt().s[39]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_2h6np5v0lt().b[10][1]++;
    }
    cov_2h6np5v0lt().s[40]++;
    return false;
  }
  /**
   * Get enabled rules sorted by priority
   */
  getEnabledRules() {
    /* istanbul ignore next */
    cov_2h6np5v0lt().f[9]++;
    cov_2h6np5v0lt().s[41]++;
    if (!this.globalContext) {
      /* istanbul ignore next */
      cov_2h6np5v0lt().b[11][0]++;
      cov_2h6np5v0lt().s[42]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_2h6np5v0lt().b[11][1]++;
    }
    cov_2h6np5v0lt().s[43]++;
    return this.globalContext.rules.filter(rule => {
      /* istanbul ignore next */
      cov_2h6np5v0lt().f[10]++;
      cov_2h6np5v0lt().s[44]++;
      return rule.enabled;
    }).sort((a, b) => {
      /* istanbul ignore next */
      cov_2h6np5v0lt().f[11]++;
      cov_2h6np5v0lt().s[45]++;
      return b.priority - a.priority;
    });
  }
  /**
   * Export global context for serialization
   */
  exportContext() {
    /* istanbul ignore next */
    cov_2h6np5v0lt().f[12]++;
    cov_2h6np5v0lt().s[46]++;
    return this.globalContext ?
    /* istanbul ignore next */
    (cov_2h6np5v0lt().b[12][0]++, {
      ...this.globalContext
    }) :
    /* istanbul ignore next */
    (cov_2h6np5v0lt().b[12][1]++, null);
  }
  /**
   * Import global context from serialized data
   */
  importContext(context) {
    /* istanbul ignore next */
    cov_2h6np5v0lt().f[13]++;
    cov_2h6np5v0lt().s[47]++;
    this.globalContext = context;
  }
  // Private helper methods
  getDefaultProjectInfo() {
    /* istanbul ignore next */
    cov_2h6np5v0lt().f[14]++;
    cov_2h6np5v0lt().s[48]++;
    return {
      name: 'Vibe Workflow Commands',
      description: 'Advanced AI-assisted development workflow system',
      type: 'library',
      technologies: ['TypeScript', 'Node.js', 'Claude', 'MCP'],
      architecture: 'modular-agent-system'
    };
  }
  getDefaultUserProfile() {
    /* istanbul ignore next */
    cov_2h6np5v0lt().f[15]++;
    cov_2h6np5v0lt().s[49]++;
    return {
      preferences: this.getDefaultUserPreferences(),
      experience: 'advanced',
      focusAreas: ['ai-assistance', 'workflow-automation', 'code-quality']
    };
  }
  getDefaultUserPreferences() {
    /* istanbul ignore next */
    cov_2h6np5v0lt().f[16]++;
    cov_2h6np5v0lt().s[50]++;
    return {
      codeStyle: {
        indentation: 'spaces',
        spacing: 2,
        lineLength: 100,
        conventions: ['camelCase', 'PascalCase', 'kebab-case-files']
      },
      documentation: {
        format: 'markdown',
        detail: 'comprehensive',
        examples: true
      },
      testing: {
        framework: 'jest',
        coverage: 95,
        types: ['unit', 'integration', 'e2e']
      }
    };
  }
  buildToolConfigurations() {
    /* istanbul ignore next */
    cov_2h6np5v0lt().f[17]++;
    cov_2h6np5v0lt().s[51]++;
    return [{
      toolName: 'TodoWrite',
      enabled: true,
      priority: context_types_1.ContextPriority.HIGH,
      settings: {
        autoTrack: true,
        maxTasks: 50
      }
    }, {
      toolName: 'Bash',
      enabled: true,
      priority: context_types_1.ContextPriority.MEDIUM,
      settings: {
        timeout: 120000,
        safeMode: true
      }
    }, {
      toolName: 'Read',
      enabled: true,
      priority: context_types_1.ContextPriority.MEDIUM,
      settings: {
        maxFileSize: 1000000,
        encoding: 'utf-8'
      }
    }, {
      toolName: 'Write',
      enabled: true,
      priority: context_types_1.ContextPriority.MEDIUM,
      settings: {
        backup: true,
        validateSyntax: true
      }
    }];
  }
}
/* istanbul ignore next */
cov_2h6np5v0lt().s[52]++;
exports.GlobalContextManager = GlobalContextManager;
/**
 * Singleton instance for global context management
 */
/* istanbul ignore next */
cov_2h6np5v0lt().s[53]++;
exports.globalContextManager = new GlobalContextManager();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,