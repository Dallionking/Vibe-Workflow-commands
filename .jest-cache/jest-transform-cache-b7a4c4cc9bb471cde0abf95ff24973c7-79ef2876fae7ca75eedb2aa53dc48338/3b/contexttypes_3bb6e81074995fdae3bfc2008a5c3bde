7aeefa23f4396e1d1a4c0eb835647cf2
"use strict";

/**
 * Core Context Engineering Types for Vibe Coding System
 * Based on research from OpenAI Agents SDK and TypeScript best practices
 */
/* istanbul ignore next */
function cov_s9cj7w4rn() {
  var path = "/Users/dallionking/Vibe Projects/Vibe Workflow commands /context/types/context.types.ts";
  var hash = "67725dde4575362a73227c6598830e378d6e6353";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dallionking/Vibe Projects/Vibe Workflow commands /context/types/context.types.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 22
        },
        end: {
          line: 16,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 7,
          column: 33
        }
      },
      "2": {
        start: {
          line: 7,
          column: 26
        },
        end: {
          line: 7,
          column: 33
        }
      },
      "3": {
        start: {
          line: 8,
          column: 15
        },
        end: {
          line: 8,
          column: 52
        }
      },
      "4": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 11,
          column: 5
        }
      },
      "5": {
        start: {
          line: 10,
          column: 6
        },
        end: {
          line: 10,
          column: 68
        }
      },
      "6": {
        start: {
          line: 10,
          column: 51
        },
        end: {
          line: 10,
          column: 63
        }
      },
      "7": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 39
        }
      },
      "8": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 33
        }
      },
      "9": {
        start: {
          line: 14,
          column: 26
        },
        end: {
          line: 14,
          column: 33
        }
      },
      "10": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 17
        }
      },
      "11": {
        start: {
          line: 17,
          column: 19
        },
        end: {
          line: 19,
          column: 1
        }
      },
      "12": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 126
        }
      },
      "13": {
        start: {
          line: 18,
          column: 21
        },
        end: {
          line: 18,
          column: 126
        }
      },
      "14": {
        start: {
          line: 18,
          column: 95
        },
        end: {
          line: 18,
          column: 126
        }
      },
      "15": {
        start: {
          line: 20,
          column: 0
        },
        end: {
          line: 20,
          column: 62
        }
      },
      "16": {
        start: {
          line: 21,
          column: 0
        },
        end: {
          line: 21,
          column: 33
        }
      },
      "17": {
        start: {
          line: 26,
          column: 0
        },
        end: {
          line: 32,
          column: 72
        }
      },
      "18": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 69
        }
      },
      "19": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 60
        }
      },
      "20": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 29,
          column: 64
        }
      },
      "21": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 30,
          column: 58
        }
      },
      "22": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 66
        }
      },
      "23": {
        start: {
          line: 36,
          column: 0
        },
        end: {
          line: 36,
          column: 50
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 74
          },
          end: {
            line: 6,
            column: 75
          }
        },
        loc: {
          start: {
            line: 6,
            column: 96
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 10,
            column: 38
          },
          end: {
            line: 10,
            column: 39
          }
        },
        loc: {
          start: {
            line: 10,
            column: 49
          },
          end: {
            line: 10,
            column: 65
          }
        },
        line: 10
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 13,
            column: 6
          },
          end: {
            line: 13,
            column: 7
          }
        },
        loc: {
          start: {
            line: 13,
            column: 28
          },
          end: {
            line: 16,
            column: 1
          }
        },
        line: 13
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 17,
            column: 50
          },
          end: {
            line: 17,
            column: 51
          }
        },
        loc: {
          start: {
            line: 17,
            column: 71
          },
          end: {
            line: 19,
            column: 1
          }
        },
        line: 17
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 26,
            column: 1
          },
          end: {
            line: 26,
            column: 2
          }
        },
        loc: {
          start: {
            line: 26,
            column: 28
          },
          end: {
            line: 32,
            column: 1
          }
        },
        line: 26
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 6,
            column: 22
          },
          end: {
            line: 16,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 23
          },
          end: {
            line: 6,
            column: 27
          }
        }, {
          start: {
            line: 6,
            column: 31
          },
          end: {
            line: 6,
            column: 51
          }
        }, {
          start: {
            line: 6,
            column: 57
          },
          end: {
            line: 16,
            column: 2
          }
        }],
        line: 6
      },
      "1": {
        loc: {
          start: {
            line: 6,
            column: 57
          },
          end: {
            line: 16,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 6,
            column: 74
          },
          end: {
            line: 13,
            column: 1
          }
        }, {
          start: {
            line: 13,
            column: 6
          },
          end: {
            line: 16,
            column: 1
          }
        }],
        line: 6
      },
      "2": {
        loc: {
          start: {
            line: 7,
            column: 4
          },
          end: {
            line: 7,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 7,
            column: 4
          },
          end: {
            line: 7,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 7
      },
      "3": {
        loc: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "4": {
        loc: {
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 9,
            column: 13
          }
        }, {
          start: {
            line: 9,
            column: 18
          },
          end: {
            line: 9,
            column: 84
          }
        }],
        line: 9
      },
      "5": {
        loc: {
          start: {
            line: 9,
            column: 18
          },
          end: {
            line: 9,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 9,
            column: 34
          },
          end: {
            line: 9,
            column: 47
          }
        }, {
          start: {
            line: 9,
            column: 50
          },
          end: {
            line: 9,
            column: 84
          }
        }],
        line: 9
      },
      "6": {
        loc: {
          start: {
            line: 9,
            column: 50
          },
          end: {
            line: 9,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 50
          },
          end: {
            line: 9,
            column: 63
          }
        }, {
          start: {
            line: 9,
            column: 67
          },
          end: {
            line: 9,
            column: 84
          }
        }],
        line: 9
      },
      "7": {
        loc: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 14
      },
      "8": {
        loc: {
          start: {
            line: 17,
            column: 19
          },
          end: {
            line: 19,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 20
          },
          end: {
            line: 17,
            column: 24
          }
        }, {
          start: {
            line: 17,
            column: 28
          },
          end: {
            line: 17,
            column: 45
          }
        }, {
          start: {
            line: 17,
            column: 50
          },
          end: {
            line: 19,
            column: 1
          }
        }],
        line: 17
      },
      "9": {
        loc: {
          start: {
            line: 18,
            column: 21
          },
          end: {
            line: 18,
            column: 126
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 21
          },
          end: {
            line: 18,
            column: 126
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 25
          },
          end: {
            line: 18,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 25
          },
          end: {
            line: 18,
            column: 40
          }
        }, {
          start: {
            line: 18,
            column: 44
          },
          end: {
            line: 18,
            column: 93
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 32,
            column: 3
          },
          end: {
            line: 32,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 3
          },
          end: {
            line: 32,
            column: 18
          }
        }, {
          start: {
            line: 32,
            column: 23
          },
          end: {
            line: 32,
            column: 69
          }
        }],
        line: 32
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dallionking/Vibe Projects/Vibe Workflow commands /context/types/context.types.ts",
      mappings: ";AAAA;;;GAGG;;;;;;;;;;;;;;;;;AA2GH;;GAEG;AACH,IAAY,eAMX;AAND,WAAY,eAAe;IACzB,gEAAe,CAAA;IACf,uDAAU,CAAA;IACV,2DAAY,CAAA;IACZ,qDAAS,CAAA;IACT,6DAAa,CAAA;AACf,CAAC,EANW,eAAe,+BAAf,eAAe,QAM1B;AAyWD,+EAA+E;AAC/E,mBAAmB;AACnB,+EAA+E;AAE/E,kDAAgC",
      names: [],
      sources: ["/Users/dallionking/Vibe Projects/Vibe Workflow commands /context/types/context.types.ts"],
      sourcesContent: ["/**\n * Core Context Engineering Types for Vibe Coding System\n * Based on research from OpenAI Agents SDK and TypeScript best practices\n */\n\n// ============================================================================\n// Base Context Types\n// ============================================================================\n\n/**\n * Context Pattern for Learning System\n */\nexport interface ContextPattern {\n  id: string;\n  type: 'sequence' | 'priority-distribution' | 'content-similarity' | 'assembly';\n  name: string;\n  description: string;\n  fragmentSignature: any[];\n  contextSignature: string;\n  confidence: number;\n  usage: number;\n  lastUsed: number;\n  created: number;\n}\n\n/**\n * Context Decision for Learning System\n */\nexport interface ContextDecision {\n  id: string;\n  contextId: string;\n  decision: string;\n  reasoning: string;\n  outcome: 'success' | 'failure' | 'partial';\n  contextSignature: string;\n  confidence: number;\n  timestamp: number;\n}\n\n/**\n * Learning Metrics for Context Memory\n */\nexport interface LearningMetrics {\n  patternsLearned: number;\n  decisionsRecorded: number;\n  recommendationsGenerated: number;\n  accuracyRate: number;\n  lastUpdated: number;\n}\n\n/**\n * Memory Entry for Context Storage\n */\nexport interface MemoryEntry {\n  id: string;\n  key: string;\n  content: string;\n  type: 'pattern' | 'decision' | 'learning';\n  priority: ContextPriority;\n  accessCount: number;\n  created: number;\n  lastAccessed: number;\n}\n\n/**\n * Pattern Recognition Result\n */\nexport interface PatternRecognition {\n  identifiedPatterns: ContextPattern[];\n  confidenceScore: number;\n  recommendations: string[];\n  appliedPatterns: string[];\n  timestamp: number;\n}\n\n/**\n * Base context interface inspired by OpenAI Agents' RunContext pattern\n */\nexport interface BaseContext<T = unknown> {\n  readonly id: string;\n  readonly timestamp: number;\n  readonly version: string;\n  data: T;\n  metadata: ContextMetadata;\n}\n\n/**\n * Context metadata for tracking and validation\n */\nexport interface ContextMetadata {\n  source: ContextSource;\n  priority: ContextPriority;\n  ttl?: number; // Time to live in milliseconds\n  tags: string[];\n  dependencies: string[];\n  created: number;\n  lastModified: number;\n}\n\n/**\n * Context sources using discriminated unions for type safety\n */\nexport type ContextSource =\n  | { type: 'global'; scope: 'system' | 'user' | 'project' }\n  | { type: 'phase'; phaseNumber: number; phaseName: string }\n  | { type: 'task'; taskId: string; taskType: string }\n  | { type: 'memory'; memoryType: 'pattern' | 'decision' | 'learning' }\n  | { type: 'command'; commandName: string; commandType: string }\n  | { type: 'external'; provider: string; dataType: string };\n\n/**\n * Priority levels for context selection\n */\nexport enum ContextPriority {\n  CRITICAL = 1000,\n  HIGH = 800,\n  MEDIUM = 500,\n  LOW = 200,\n  MINIMAL = 100\n}\n\n// ============================================================================\n// Context Fragment Architecture\n// ============================================================================\n\n/**\n * Context fragment - atomic unit of context information\n * Inspired by OpenAI's context management patterns\n */\nexport interface ContextFragment {\n  readonly id: string;\n  readonly type: ContextFragmentType;\n  content: string;\n  priority: ContextPriority;\n  tokenEstimate: number;\n  metadata: ContextMetadata;\n  validation: FragmentValidation;\n}\n\n/**\n * Context fragment types using discriminated unions\n */\nexport type ContextFragmentType =\n  | 'global-rules'\n  | 'global-config'\n  | 'phase-context'\n  | 'phase-history'\n  | 'task-context'\n  | 'task-state'\n  | 'memory-pattern'\n  | 'memory-decision'\n  | 'command-context'\n  | 'external-data';\n\n/**\n * Fragment validation information\n */\nexport interface FragmentValidation {\n  isValid: boolean;\n  errors: ValidationError[];\n  warnings: ValidationWarning[];\n  lastValidated: number;\n}\n\nexport interface ValidationError {\n  code: string;\n  message: string;\n  severity: 'error' | 'warning' | 'info';\n  field?: string;\n}\n\nexport interface ValidationWarning {\n  code: string;\n  message: string;\n  suggestion?: string;\n}\n\n// ============================================================================\n// Three-Layer Context System\n// ============================================================================\n\n/**\n * Three-layer context system as specified in Phase 1\n */\nexport interface ContextLayers {\n  L1_Global: GlobalContextLayer;\n  L2_Phase: PhaseContextLayer;\n  L3_Task: TaskContextLayer;\n}\n\n/**\n * L1: Global Context - Always Active\n */\nexport interface GlobalContextLayer extends BaseContext<GlobalContextData> {\n  layer: 'global';\n  rules: GlobalRule[];\n  configuration: GlobalConfiguration;\n  preferences: UserPreferences;\n}\n\nexport interface GlobalContextData {\n  systemRules: string[];\n  projectInfo: ProjectInfo;\n  userProfile: UserProfile;\n  toolConfigurations: ToolConfiguration[];\n}\n\nexport interface GlobalRule {\n  id: string;\n  name: string;\n  description: string;\n  rule: string;\n  enabled: boolean;\n  priority: ContextPriority;\n}\n\nexport interface GlobalConfiguration {\n  mcpTools: MCPToolConfig[];\n  qualityStandards: QualityStandard[];\n  developmentPatterns: DevelopmentPattern[];\n}\n\n/**\n * L2: Phase Context - Current Phase\n */\nexport interface PhaseContextLayer extends BaseContext<PhaseContextData> {\n  layer: 'phase';\n  phaseNumber: number;\n  phaseName: string;\n  phaseState: PhaseState;\n  dependencies: PhaseDependency[];\n}\n\nexport interface PhaseContextData {\n  objectives: string[];\n  requirements: PhaseRequirement[];\n  progress: PhaseProgress;\n  outputs: PhaseOutput[];\n  validationCriteria: ValidationCriteria[];\n}\n\nexport interface PhaseState {\n  status: 'not-started' | 'in-progress' | 'completed' | 'blocked';\n  currentTier: number;\n  currentSubtask: string;\n  completedTasks: string[];\n  blockers: PhaseBlocker[];\n}\n\n/**\n * L3: Task Context - Current Task\n */\nexport interface TaskContextLayer extends BaseContext<TaskContextData> {\n  layer: 'task';\n  taskId: string;\n  taskType: TaskType;\n  parentTask?: string;\n  subtasks: string[];\n}\n\nexport interface TaskContextData {\n  objective: string;\n  instructions: string[];\n  parameters: TaskParameter[];\n  expectedOutputs: ExpectedOutput[];\n  validationRules: ValidationRule[];\n}\n\nexport type TaskType =\n  | 'implementation'\n  | 'research'\n  | 'validation'\n  | 'documentation'\n  | 'testing'\n  | 'integration'\n  | 'optimization';\n\n// ============================================================================\n// Supporting Types\n// ============================================================================\n\nexport interface ProjectInfo {\n  name: string;\n  description: string;\n  type: 'saas' | 'mobile' | 'enterprise' | 'library' | 'other';\n  technologies: string[];\n  architecture: string;\n}\n\nexport interface UserProfile {\n  preferences: UserPreferences;\n  experience: ExperienceLevel;\n  focusAreas: string[];\n}\n\nexport interface UserPreferences {\n  codeStyle: CodeStylePreferences;\n  documentation: DocumentationPreferences;\n  testing: TestingPreferences;\n}\n\nexport interface CodeStylePreferences {\n  indentation: 'tabs' | 'spaces';\n  spacing: number;\n  lineLength: number;\n  conventions: string[];\n}\n\nexport interface DocumentationPreferences {\n  format: 'markdown' | 'jsdoc' | 'typedoc' | 'custom';\n  detail: 'minimal' | 'standard' | 'comprehensive';\n  examples: boolean;\n}\n\nexport interface TestingPreferences {\n  framework: string;\n  coverage: number;\n  types: ('unit' | 'integration' | 'e2e')[];\n}\n\nexport type ExperienceLevel = 'beginner' | 'intermediate' | 'advanced' | 'expert';\n\nexport interface MCPToolConfig {\n  name: string;\n  enabled: boolean;\n  priority: ContextPriority;\n  configuration: Record<string, unknown>;\n}\n\nexport interface QualityStandard {\n  name: string;\n  description: string;\n  criteria: QualityCriteria[];\n  threshold: number;\n}\n\nexport interface QualityCriteria {\n  metric: string;\n  target: number;\n  required: boolean;\n}\n\nexport interface DevelopmentPattern {\n  name: string;\n  description: string;\n  pattern: string;\n  examples: string[];\n  applicability: string[];\n}\n\nexport interface PhaseRequirement {\n  id: string;\n  description: string;\n  type: 'functional' | 'non-functional' | 'quality' | 'documentation';\n  priority: ContextPriority;\n  satisfied: boolean;\n}\n\nexport interface PhaseProgress {\n  completionPercentage: number;\n  tasksCompleted: number;\n  tasksTotal: number;\n  timeSpent: number;\n  estimatedRemaining: number;\n}\n\nexport interface PhaseOutput {\n  type: 'code' | 'documentation' | 'configuration' | 'test' | 'artifact';\n  path: string;\n  description: string;\n  validated: boolean;\n}\n\nexport interface ValidationCriteria {\n  id: string;\n  description: string;\n  validator: string;\n  required: boolean;\n  passed?: boolean;\n}\n\nexport interface PhaseBlocker {\n  id: string;\n  description: string;\n  type: 'dependency' | 'resource' | 'technical' | 'decision';\n  severity: 'low' | 'medium' | 'high' | 'critical';\n  resolution?: string;\n}\n\nexport interface PhaseDependency {\n  phaseNumber: number;\n  phaseName: string;\n  type: 'blocks' | 'enhances' | 'optional';\n  satisfied: boolean;\n}\n\nexport interface TaskParameter {\n  name: string;\n  type: string;\n  value: unknown;\n  required: boolean;\n  description: string;\n}\n\nexport interface ExpectedOutput {\n  type: string;\n  format: string;\n  description: string;\n  validationRules: string[];\n}\n\nexport interface ValidationRule {\n  id: string;\n  description: string;\n  rule: string;\n  severity: 'error' | 'warning' | 'info';\n}\n\nexport interface ToolConfiguration {\n  toolName: string;\n  enabled: boolean;\n  priority: ContextPriority;\n  settings: Record<string, unknown>;\n}\n\n// ============================================================================\n// Context Assembly Types\n// ============================================================================\n\n/**\n * Token budget management for context assembly\n */\nexport interface TokenBudget {\n  total: number;\n  reserved: number;\n  available: number;\n  used: number;\n  allocation: TokenAllocation;\n}\n\nexport interface TokenAllocation {\n  global: number;\n  phase: number;\n  task: number;\n  memory: number;\n  buffer: number;\n}\n\n/**\n * Context assembly configuration\n */\nexport interface ContextAssemblyConfig {\n  tokenBudget: TokenBudget;\n  priorityWeights: PriorityWeights;\n  fallbackStrategy: FallbackStrategy;\n  cacheConfig: CacheConfiguration;\n}\n\nexport interface PriorityWeights {\n  [ContextPriority.CRITICAL]: number;\n  [ContextPriority.HIGH]: number;\n  [ContextPriority.MEDIUM]: number;\n  [ContextPriority.LOW]: number;\n  [ContextPriority.MINIMAL]: number;\n}\n\nexport type FallbackStrategy =\n  | 'truncate-oldest'\n  | 'truncate-lowest-priority'\n  | 'compress-content'\n  | 'summarize-content'\n  | 'fail-fast';\n\nexport interface CacheConfiguration {\n  maxSize: number;\n  ttl: number;\n  strategy: 'lru' | 'lfu' | 'ttl' | 'fifo';\n  persistToDisk: boolean;\n}\n\n// ============================================================================\n// Export All Types\n// ============================================================================\n\nexport * from './context.types';"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "67725dde4575362a73227c6598830e378d6e6353"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_s9cj7w4rn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_s9cj7w4rn();
var __createBinding =
/* istanbul ignore next */
(cov_s9cj7w4rn().s[0]++,
/* istanbul ignore next */
(cov_s9cj7w4rn().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_s9cj7w4rn().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_s9cj7w4rn().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_s9cj7w4rn().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_s9cj7w4rn().f[0]++;
  cov_s9cj7w4rn().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_s9cj7w4rn().b[2][0]++;
    cov_s9cj7w4rn().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_s9cj7w4rn().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_s9cj7w4rn().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_s9cj7w4rn().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_s9cj7w4rn().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_s9cj7w4rn().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_s9cj7w4rn().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_s9cj7w4rn().b[5][1]++,
  /* istanbul ignore next */
  (cov_s9cj7w4rn().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_s9cj7w4rn().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_s9cj7w4rn().b[3][0]++;
    cov_s9cj7w4rn().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_s9cj7w4rn().f[1]++;
        cov_s9cj7w4rn().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_s9cj7w4rn().b[3][1]++;
  }
  cov_s9cj7w4rn().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_s9cj7w4rn().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_s9cj7w4rn().f[2]++;
  cov_s9cj7w4rn().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_s9cj7w4rn().b[7][0]++;
    cov_s9cj7w4rn().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_s9cj7w4rn().b[7][1]++;
  }
  cov_s9cj7w4rn().s[10]++;
  o[k2] = m[k];
})));
var __exportStar =
/* istanbul ignore next */
(cov_s9cj7w4rn().s[11]++,
/* istanbul ignore next */
(cov_s9cj7w4rn().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_s9cj7w4rn().b[8][1]++, this.__exportStar) ||
/* istanbul ignore next */
(cov_s9cj7w4rn().b[8][2]++, function (m, exports) {
  /* istanbul ignore next */
  cov_s9cj7w4rn().f[3]++;
  cov_s9cj7w4rn().s[12]++;
  for (var p in m) {
    /* istanbul ignore next */
    cov_s9cj7w4rn().s[13]++;
    if (
    /* istanbul ignore next */
    (cov_s9cj7w4rn().b[10][0]++, p !== "default") &&
    /* istanbul ignore next */
    (cov_s9cj7w4rn().b[10][1]++, !Object.prototype.hasOwnProperty.call(exports, p))) {
      /* istanbul ignore next */
      cov_s9cj7w4rn().b[9][0]++;
      cov_s9cj7w4rn().s[14]++;
      __createBinding(exports, m, p);
    } else
    /* istanbul ignore next */
    {
      cov_s9cj7w4rn().b[9][1]++;
    }
  }
}));
/* istanbul ignore next */
cov_s9cj7w4rn().s[15]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_s9cj7w4rn().s[16]++;
exports.ContextPriority = void 0;
/**
 * Priority levels for context selection
 */
var ContextPriority;
/* istanbul ignore next */
cov_s9cj7w4rn().s[17]++;
(function (ContextPriority) {
  /* istanbul ignore next */
  cov_s9cj7w4rn().f[4]++;
  cov_s9cj7w4rn().s[18]++;
  ContextPriority[ContextPriority["CRITICAL"] = 1000] = "CRITICAL";
  /* istanbul ignore next */
  cov_s9cj7w4rn().s[19]++;
  ContextPriority[ContextPriority["HIGH"] = 800] = "HIGH";
  /* istanbul ignore next */
  cov_s9cj7w4rn().s[20]++;
  ContextPriority[ContextPriority["MEDIUM"] = 500] = "MEDIUM";
  /* istanbul ignore next */
  cov_s9cj7w4rn().s[21]++;
  ContextPriority[ContextPriority["LOW"] = 200] = "LOW";
  /* istanbul ignore next */
  cov_s9cj7w4rn().s[22]++;
  ContextPriority[ContextPriority["MINIMAL"] = 100] = "MINIMAL";
})(
/* istanbul ignore next */
(cov_s9cj7w4rn().b[11][0]++, ContextPriority) ||
/* istanbul ignore next */
(cov_s9cj7w4rn().b[11][1]++, exports.ContextPriority = ContextPriority = {}));
// ============================================================================
// Export All Types
// ============================================================================
/* istanbul ignore next */
cov_s9cj7w4rn().s[23]++;
__exportStar(require("./context.types"), exports);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,