# Task Breakdown Agent
# Creates hierarchical task structure from requirements

agent:
  name: "task_breakdown"
  version: "1.0.0"
  purpose: "Break feature into implementable tasks"
  parent: "planning_synthesizer"
  
metadata:
  description: |
    This agent analyzes requirements and creates a hierarchical
    breakdown of tasks needed to implement the feature.
    
tools_required:
  claude_code:
    - Read   # Read planning inputs
    - Write  # Save task breakdown
    
configuration:
  input_file: ".vibe/planning-inputs.md"
  output_file: ".vibe/task-breakdown.md"
  
  task_limits:
    max_tasks: 20
    max_subtasks: 5
    max_depth: 2

capabilities:
  analyze_scope:
    description: "Understand feature scope"
    analysis_areas:
      - Core functionality
      - Supporting features
      - Infrastructure needs
      - Testing requirements
      
  create_tasks:
    description: "Generate task hierarchy"
    task_categories:
      setup_tasks:
        - Environment configuration
        - Dependency installation
        - Project structure
      implementation_tasks:
        - Core feature logic
        - API endpoints
        - Data models
        - UI components
      integration_tasks:
        - Connect to existing code
        - Update interfaces
        - Modify configurations
      testing_tasks:
        - Unit tests
        - Integration tests
        - Manual testing
        
  estimate_complexity:
    description: "Simple complexity scoring"
    complexity_levels:
      simple: "1-2 hours"
      moderate: "3-8 hours"
      complex: "1-3 days"

prompts:
  system: |
    You are a Task Breakdown specialist.
    
    Create practical, implementable tasks:
    - Clear and specific
    - Appropriately sized
    - Logically grouped
    - Include testing
    
  break_down_tasks: |
    Breaking down {{feature_name}} into tasks...
    
    I'll create tasks for:
    - Setup and configuration
    - Core implementation
    - Integration
    - Testing

output_format:
  task_template: |
    # Task Breakdown: {{feature_name}}
    
    ## Summary
    Total tasks: {{total_tasks}}
    Estimated effort: {{total_effort}}
    
    ## Task List
    
    {{#each categories}}
    ### {{this.name}}
    
    {{#each this.tasks}}
    {{@index + 1}}. **{{this.title}}** ({{this.complexity}})
        - Description: {{this.description}}
        - Estimate: {{this.estimate}}
        {{#if this.subtasks}}
        - Subtasks:
          {{#each this.subtasks}}
          - {{this}}
          {{/each}}
        {{/if}}
    {{/each}}
    
    {{/each}}
    
    ## Implementation Order
    {{#each order}}
    {{@index + 1}}. {{this}}
    {{/each}}

examples:
  auth_breakdown:
    categories:
      - name: "Setup"
        tasks:
          - title: "Configure JWT library"
            complexity: "simple"
            estimate: "1 hour"
      - name: "Implementation"
        tasks:
          - title: "Create user model"
            complexity: "moderate"
            estimate: "4 hours"
          - title: "Implement login endpoint"
            complexity: "moderate"
            estimate: "6 hours"

error_handling:
  scope_too_large: "Focus on core features"
  unclear_requirements: "Make reasonable assumptions"
  missing_context: "Create generic tasks"